// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# CustomerGroupPurposeResponse
public type CustomerGroupPurposeResponse record {
    ScreenHeader header?;
    CustomerGroupPurposeResponseBody body?;
};

# Represents the Headers record for the operation: getCustomerPrintAddress
public type GetCustomerPrintAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getStandingOrders
public type GetStandingOrdersQueries record {
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Indicates the customer id for the ordering customer
    string orderingCustomerId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The unique standing order identifier
    string standingOrderId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerEmailAddressResponse1Body record {
    # Indicates the extensions
    record {} extensions?;
    # Denotes the Short name registered for a customer
    CustomerProfileResponseBodyCustomerShortNames[] customerShortNames?;
    # Email Identifier of the Customer
    @constraint:String {maxLength: 254}
    string email?;
};

public type CustomerGroupPurposeBodyAggregateRelationships record {
    # Indicates the relations that must be considered for aggregating under a primary customer within the customer group. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedAggregateRelationship?;
};

public type CustomerContactsResponseBodyInner_smsNumbers record {
    # The mobile SMS number of the customer
    string smsNumber?;
};

public type CustomerPhoneAddressResponseBodyInner record {
    # Identifier of the customer address table
    @constraint:String {maxLength: 1000}
    string customerAddressId?;
    # Identifies the international calling prefix code of the mobile
    @constraint:String {maxLength: 16}
    string iddPrefixMobile?;
    # Indicates the extension data
    record {} extensions?;
    # Mobile number of the customer
    @constraint:String {maxLength: 100}
    string mobileNumber?;
    # Denotes the Short name registered for a customer
    CustomerPhoneAddressResponseBodyInner_customerShortNames[] customerShortNames?;
};

public type CustomerGroupBodySubGroupDetails record {
    # The name that is displayed for the group
    @constraint:String {maxLength: 35}
    string groupName?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 9}
    string companyId?;
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 6}
    string accountOfficer?;
    # Unique ID of the group
    @constraint:String {maxLength: 15}
    string groupId?;
    # Indicates the identifier for party details in which party id and party owner are defined
    CustomerGroupBodyPartyDetails[] partyDetails?;
};

public type CustomerProfileResponseBodyCustomerNameAdditionals record {
    # Continuation/Extension to the Customer Name
    @constraint:String {maxLength: 70}
    string customerNameAdditional?;
};

public type CustomerExitStatusParamResponseBody CustomerExitStatusParamResponseBodyInner[];

# Represents the Queries record for the operation: getCustomerKYCDetails
public type GetCustomerKYCDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type ScreenHeader record {
    # The status of the transaction
    string transactionStatus?;
    ScreenHeaderAudit audit?;
    # The Identifier of the record created
    string id?;
    # Status of the API(success/failed)
    string status?;
    # The unique identifier/Message Reference of the record created
    string uniqueIdentifier?;
};

public type CustomerPersonalDetailsResponseBodyInner_employDetails record {
    # Employment status of the customer
    @constraint:String {maxLength: 35}
    string employStatus?;
    # Occupation of the customer
    @constraint:String {maxLength: 35}
    string occupation?;
    # Employment Job Title of the Customer
    @constraint:String {maxLength: 10}
    string employJobTitle?;
    # Name of the customer's employer
    @constraint:String {maxLength: 35}
    string employerName?;
    # Starting date of the customer's employment
    string employStartDate?;
    # Currency in which the Salary information of the customer is maintained
    @constraint:String {maxLength: 3}
    string salaryCurrency?;
    # Gross Salary details of the customer
    @constraint:Number {maxValue: 19}
    decimal salaryAmount?;
    # The business of customer's employer involved.
    @constraint:String {maxLength: 35}
    string employerBusiness?;
    # Indicates the Annual bonus received by customer
    @constraint:Number {maxValue: 19}
    decimal annualBonus?;
    # Indicates the payment frequency of salary.
    @constraint:String {maxLength: 17}
    string salaryFrequency?;
    # Net income earned by customer each month.
    @constraint:String {maxLength: 19}
    string netMonthlyIncome?;
    # Net expenses of customer each month.
    @constraint:String {maxLength: 19}
    string netMonthlyExpense?;
    # Contains the communication address of the customer or full address of the property
    CustomerPersonalDetailsResponseBodyInner_Addresses[] Addresses?;
};

public type PartyRelationshipBodyPartyRelationships record {
    # Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership
    @constraint:String {maxLength: 6}
    string owningPercent?;
    # Indicates the related party's customer type. It may be Customer, Person or Entity
    @constraint:String {maxLength: 10}
    string relatedPartyType?;
    # Entity Relationship with the partyType
    @constraint:String {maxLength: 13}
    string relatedAs?;
    # Related customers or persons/entities that are part of the relationship
    @constraint:String {maxLength: 20}
    string relationPartyId?;
    # Relationship identifier between the partyType and relatedPartyType
    @constraint:String {maxLength: 3}
    string relationshipCode?;
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY
    @constraint:String {maxLength: 10}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 20}
    string partyId?;
};

# Represents the Queries record for the operation: getCustomerAddressOutput
public type GetCustomerAddressOutputQueries record {
    # It identifies the address output format for the unstructured address
    string addressOutputFormat?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # It reflects the preference for the customer address format, respective structured, unstructured or both
    string addressOption?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerEmailAddress
public type GetCustomerEmailAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerAddressOutput
public type GetCustomerAddressOutputHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerEmailAddress
public type GetCustomerEmailAddressQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Reference Id of address record
    string addressId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerPostingRestrictions
public type GetCustomerPostingRestrictionsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerPostingRestrictions
public type GetCustomerPostingRestrictionsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerExitStatusParamResponseBodyInner_allowedExitReasons record {
    # The field indicates the reason for exiting a relation with a prospect or customer.
    @constraint:String {maxLength: 70}
    string allowedExitReason?;
};

public type CustomerConsentsResponseBody CustomerConsentsResponseBodyInner[];

# AlertRequestsResponse
public type AlertRequestsResponse record {
    QueryHeader header?;
    AlertRequestsResponseBody body?;
};

public type CustomerResponseBodyFaxIds record {
    # The fax (facsimile) number of the customer
    @constraint:String {maxLength: 67}
    string faxId?;
};

public type CustomerGroupPurposeResponse1Body UnapprovedCustomerGroupPurposeResponseBodyInner[];

public type CustomerProfileResponseBodyCustomerShortNames record {
    # Indicates the short name of Customer
    @constraint:String {maxLength: 70}
    string customerShortName?;
};

public type FatcaCustomerBodyOwner record {
    # Identifies the owner of the documents
    @constraint:String {maxLength: 35}
    string formOwner?;
    FatcaCustomerBodyFormDetails[] formDetails?;
};

public type OverdueSettlementsResponseBodyInner_broker record {
    # The identifier of the broker
    @constraint:String {maxLength: 10}
    string brokerId?;
    # The name that is displayed for the broker
    @constraint:String {maxLength: 10}
    string brokerName?;
    # Nostro account id
    string nostro?;
    # Currency of the nostro account
    string nostroCurrency?;
    # The amount outstanding for the broker
    @constraint:Number {maxValue: 19}
    decimal brokerOutstandingAmount?;
    # The quantity of the instrument outstanding for the broker
    @constraint:String {maxLength: 19}
    string brokerOutstandingQuantity?;
};

# MessagesResponse
public type MessagesResponse record {
    ScreenHeader header?;
    MessagesResponseBody body?;
};

public type CustomerReportingStatusResponseBodyInner_crsStatuses record {
    # Holds the status of the customer as Reportable or Non-reportable.
    string[] crsStatus?;
};

# Represents the Headers record for the operation: deleteCustomerGroupPurpose
public type DeleteCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerContactsResponseBody CustomerContactsResponseBodyInner[];

# CustomerProfileResponse
public type CustomerProfileResponse record {
    ScreenHeader header?;
    CustomerProfileResponseBody body?;
};

public type ProspectCustomersResponseBody ProspectCustomersResponseBodyInner[];

public type CustomerGroupResponseBody record {
    # Contains primary pary details such as primary party id and primary party type
    CustomerGroupBodyPrimaryPartyDetails[] primaryPartyDetails?;
    # The name that is displayed for the group
    @constraint:String {maxLength: 40}
    string groupName?;
    # Indicates the type of entity that identifies the group eg. Parent or Member
    @constraint:String {maxLength: 25}
    string groupType?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 9}
    string companyId?;
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 6}
    string accountOfficer?;
    # Indicates the extensions
    record {} extensions?;
    # Indicates the details of Relationship maintained by the Customer or Entity
    CustomerGroupBodyRelationshipDetails[] relationshipDetails?;
    # Contains sub group details such as sub group id, sub group name, sub group customer etc
    CustomerGroupBodySubGroupDetails[] subGroupDetails?;
    # Identifier of the Liability Customer to the credit limit
    @constraint:String {maxLength: 10}
    string liabilityNumber?;
    # The date when the Security Account is to be closed
    @constraint:String {maxLength: 11}
    string closureDate?;
    # Contains the description of purpose of the payment
    @constraint:String {maxLength: 35}
    string description?;
    # Identifier of customer group purpose
    @constraint:String {maxLength: 15}
    string groupPurposeId?;
};

public type CustomerInformationResponseBodyInner_otherNationalityIds record {
    # Other Nationality of the Customer
    @constraint:String {maxLength: 90}
    string otherNationalityId?;
};

public type FatcaCustomerBodyFormDetails record {
    # Contains the form or sheet Id
    @constraint:String {maxLength: 35}
    string formId?;
    # This indicates the  date  on which the offer or privilege terminates for the event
    string expiryDate?;
    # Identifies the type of the document that are expected from the customer
    @constraint:String {maxLength: 50}
    string formType?;
    # Specifies the Cutoff date for document submission. Identifies the end date before which the document has to be submitted. 
    string cutOffDate?;
    # Date on which the client's request to be classified as professional has been received
    string requestDate?;
    # Identifies the date on which the document was received
    string receivedDate?;
};

# PartyBasicDetailsResponse
public type PartyBasicDetailsResponse record {
    QueryHeader header?;
    PartyBasicDetailsResponseBody body?;
};

public type CustomerGroupBodyPartyDetails record {
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY
    @constraint:String {maxLength: 13}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 10}
    string partyId?;
};

# Represents the Queries record for the operation: getOtherBanksToConnectTo
public type GetOtherBanksToConnectToQueries record {
    # Identifies the open banking number of the customer
    string openBankingId?;
    # Flag to set the connection status to active
    string setActive?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Contains the name of the external source provider for the customer
    string extSourceProvider?;
    # ISO country code of the financial institution. 
    string countryId?;
    # Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED
    string status?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# ProspectCustomersResponse
public type ProspectCustomersResponse record {
    QueryHeader header?;
    ProspectCustomersResponseBody body?;
};

public type CustomerDeliveryOptionsResponseBody CustomerDeliveryOptionsResponseBodyInner[];

# CustomerGroupPurposeResponse1
public type CustomerGroupPurposeResponse1 record {
    QueryHeader header?;
    CustomerGroupPurposeResponse1Body body?;
};

public type CustomerResponseBodyDisplayNames record {
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 90}
    string displayName?;
};

# Represents the Queries record for the operation: updateCustomer
public type UpdateCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: createCustomerExitStatusParam
public type CreateCustomerExitStatusParamHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getUnapprovedCustomerGroupPurpose
public type GetUnapprovedCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# UnapprovedCustomerGroupPurposeResponse
public type UnapprovedCustomerGroupPurposeResponse record {
    QueryHeader header?;
    UnapprovedCustomerGroupPurposeResponseBody body?;
};

# CustomerRelationshipResponse
public type CustomerRelationshipResponse record {
    ScreenHeader header?;
    CustomerRelationshipResponseBody body?;
};

public type CustomerResponseBodyAddressCities record {
    # The town and/or city component of the base address of a customer
    @constraint:String {maxLength: 55}
    string addressCity?;
};

# Represents the Headers record for the operation: getCustomerContacts
public type GetCustomerContactsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerChargeResponse
public type CustomerChargeResponse record {
    ScreenHeader header?;
    CustomerChargeResponseBody body?;
};

public type CustomerResponseBodyCountries record {
    # Identifies the country of the customer or a property or organization
    @constraint:String {maxLength: 55}
    string country?;
};

public type CustomerExitStatusParamBodyAllowedExitReasons record {
    # The field indicates the reason for exiting a relation with a prospect or customer
    @constraint:String {maxLength: 70}
    string allowedExitReason?;
};

public type CustomerInformationResponseBodyInner_contactDetails record {
    # The phone number of the customer or prospect
    CustomerInformationResponseBodyInner_phoneNumbers[] phoneNumbers?;
    # The office phone number of the customer
    CustomerInformationResponseBodyInner_officePhoneNumbers[] officePhoneNumbers?;
    CustomerInformationResponseBodyInner_mobilePhoneNumbers[] mobilePhoneNumbers?;
    # Email Identifier of the Customer
    CustomerInformationResponseBodyInner_emails[] emails?;
    # Identifies the nature of the postal address, like primary, secondary or office address
    CustomerInformationResponseBodyInner_addressLocations[] addressLocations?;
    CustomerInformationResponseBodyInner_Contacts[] Contacts?;
};

# Represents the Queries record for the operation: getCustomerDeliveryOptions
public type GetCustomerDeliveryOptionsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerLegalDocumentsResponseBodyLegalDocuments record {
    # Date of Issue of the legal document
    @constraint:String {maxLength: 11}
    string legalIssueDate?;
    # Expiry date of the legal document submitted as proof
    @constraint:String {maxLength: 11}
    string legalExpiredDate?;
    # Unique reference number of the legal documents submitted as identification proof
    @constraint:String {maxLength: 35}
    string legalId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    @constraint:String {maxLength: 35}
    string legalDocumentName?;
    # Authority who issued the legal document
    @constraint:String {maxLength: 75}
    string legalIssueAuthorisedDate?;
    # Name of the account holder in the Legal Document
    @constraint:String {maxLength: 100}
    string legalHolderName?;
};

# Represents the Queries record for the operation: createCustomerPhoneAddress
public type CreateCustomerPhoneAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type PartyBasicDetailsResponseBody PartyBasicDetailsResponseBodyInner[];

public type CustomerInformationResponseBodyInner_officePhoneNumbers record {
    # The office phone number of the customer
    @constraint:String {maxLength: 20}
    string officePhoneNumber?;
};

# Represents the Headers record for the operation: getAlertRequests
public type GetAlertRequestsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type AlertRequestsResponseBodyInner record {
    # Contains the starting message id of the conversation
    @constraint:String {maxLength: 35}
    string messageGroupId?;
    # Event identifier
    @constraint:String {maxLength: 35}
    string eventId?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Indicates the extension data
    record {} extensions?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # Input is the valid field name for the metrics evaluation of alerts
    AlertRequestsResponseBodyInner_fields[] fields?;
    # Contains the contract reference
    @constraint:String {maxLength: 35}
    string contractReference?;
    # The unique identifier of the alert request
    @constraint:String {maxLength: 35}
    string alertRequestId?;
    # Current number of the record
    @constraint:String {maxLength: 4}
    string versionNumber?;
    # Indicates the description of the Product
    string productDescription?;
};

public type CustomerLegalDocumentsResponseBody record {
    CustomerLegalDocumentsResponseBodyLegalDocuments[] legalDocuments?;
    # Indicates the extensions
    record {} extensions?;
};

public type CustomerContactsResponseBodyInner_faxIds record {
    # The fax (facsimile) number of the customer
    string faxId?;
};

public type FatcaCustomerBodyJointOwner record {
    # Specifies customer's first name
    @constraint:String {maxLength: 65}
    string firstName?;
    # Identifies the Name of the  joint, substantial or beneficial owner
    @constraint:String {maxLength: 35}
    string holderName?;
    # Indicates the Role of the Customer
    @constraint:String {maxLength: 35}
    string role?;
    # Specifies the ownership in percentage terms for the account mentioned
    @constraint:String {maxLength: 3}
    string ownershipParticipation?;
    # Indicates the Surname of the Customers
    @constraint:String {maxLength: 65}
    string surname?;
    # Identifies the Tax Country of the joint, substantial or beneficial owner
    @constraint:String {maxLength: 9}
    string holderTinCountry?;
    # Identifies whether the legal entity is individual or corporate
    @constraint:String {maxLength: 35}
    string legalEntityType?;
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # Identifies the Country of the joint, substantial or beneficial owner
    @constraint:String {maxLength: 9}
    string holderCountry?;
    # Specifies the Unique Identifier for joint, substantial or beneficial owner. Uniquely identifies the owner of the client, must be defined in format <id of the Customer> - <Sequence number>
    @constraint:String {maxLength: 15}
    string holderReference?;
};

# Represents the Headers record for the operation: createProspectCustomer
public type CreateProspectCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# OtherBanksToConnectToResponse
public type OtherBanksToConnectToResponse record {
    QueryHeader header?;
    OtherBanksToConnectToResponseBody body?;
};

# Represents the Headers record for the operation: getCustomerKYCDetails
public type GetCustomerKYCDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type BicOwnersResponseBody BicOwnersResponseBodyInner[];

# Represents the Headers record for the operation: getCustomerClosure
public type GetCustomerClosureHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerPersonalDetailsResponseBodyInner record {
    # If 'Yes', then the customer will receive a SECURE message
    boolean isSecureMessage?;
    # Indicates whether is Customer is subscribed to the mobile banking service or not
    boolean isMobileBankingService?;
    # The asset amount
    decimal assetAmount?;
    # Indicates the customer consolidation number for credit grouping purposes, within the same branch/country
    string customerLiability?;
    # Indicates whether is Customer is subscribed to the internet banking service or not
    boolean isInternetBankingService?;
    # Count of the Number of visits to the bank
    decimal customerVisitCount?;
    # Indicates the residence details of Customer or entity like type, status, value
    CustomerPersonalDetailsResponseBodyInner_residenceDetails[] residenceDetails?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 35}
    string customerName?;
    # Currency of the asset
    string assetCurrency?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the communication details of the customer like PhoneNumber, email
    CustomerPersonalDetailsResponseBodyInner_communicationDevice[] communicationDevice?;
    # Segment of the customer
    @constraint:String {maxLength: 6}
    string customerSegment?;
    # Identifier of the customer
    @constraint:Number {maxValue: 10}
    decimal customerId?;
    # Recently visited date of the customer to the bank
    string customerRecentVisitDate?;
    # Indicates the employment details of Customer like Status, title, occupation
    CustomerPersonalDetailsResponseBodyInner_employDetails[] employDetails?;
};

# CustomerRelationshipsResponse
public type CustomerRelationshipsResponse record {
    ScreenHeader header?;
    CustomerRelationshipsResponseBody body?;
};

# Represents the Queries record for the operation: updateCustomerPhoneAddress
public type UpdateCustomerPhoneAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ProspectCustomersResponseBodyInner_prospectNetworks record {
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 17}
    string phoneNumber?;
    # Email Identifier of the Customer
    @constraint:String {maxLength: 50}
    string email?;
};

public type CustomerCreditCardsResponseBodyInner record {
    # This indicates the  date  on which the offer or privilege terminates for the event
    string expiryDate?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    @constraint:String {maxLength: 12}
    string accountId?;
    # Indicates the extension data
    record {} extensions?;
    # Display name or short name of the account specified
    @constraint:String {maxLength: 35}
    string accountName?;
    # Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date
    decimal onlineActualBalance?;
    # The type of the card, e.g. Visa, Mastercard, etc
    string cardType?;
    # Limit details for the customer
    string 'limit?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # The date the item was issued
    string issueDate?;
    # Cards issued are defined with an identifier consisting of three elements. The card type, a full stop and the card number. The card number may be any alphanumeric construction, commonly a 16 numeric number is used. VISA.5332870296579001. The id must be in the form of:  CCCC.AAAAAAAAAAAAAAAA  Where CCCC is the card type and AAAAAAAAAAAAAAAA is a unique identifier.  Examples:   VISA.1234567887654321   GC.1111222233334444   AB21.1111111122222222
    @constraint:String {maxLength: 25}
    string cardNumber?;
};

# Represents the Queries record for the operation: getCustomerRequests
public type GetCustomerRequestsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type UnapprovedCustomerGroupPurposeResponseBodyInner record {
    # Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    @constraint:String {maxLength: 35}
    string allowGroupRelationship?;
    UnapprovedCustomerGroupPurposeResponseBodyInner_groupTypes[] groupTypes?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups
    @constraint:String {maxLength: 35}
    string groupLevelUniqueCustomer?;
    # Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank
    @constraint:String {maxLength: 35}
    string groupPurpose?;
    # Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    @constraint:String {maxLength: 35}
    string allowRelationship?;
    # Contains the description of purpose of the payment
    @constraint:String {maxLength: 35}
    string description?;
    # Identifier of customer group purpose
    @constraint:String {maxLength: 15}
    string groupPurposeId?;
    # Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank
    @constraint:String {maxLength: 35}
    string subGroupLevelUniqueCustomer?;
};

public type CustomerResponseBodyPostingRestrictIds record {
    # Identifies any restrictions for posting entries that are imposed on a Customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal postingRestrictId?;
};

public type CustomerPrintAddressResponse1Body record {
    # Contains a sub-division identifier of a large organisation or building
    @constraint:String {maxLength: 70}
    string subDepartmentId?;
    # Contains the communication address of the customer or full address of the property
    CustomerResponseBodyAddresses[] addresses?;
    # Identifies specific location name with in the country or town
    @constraint:String {maxLength: 55}
    string locationName?;
    # Contains the street name of the customer or the property
    CustomerResponseBodyStreets[] streets?;
    # Stores the district name of the  Beneficiary Customer
    @constraint:String {maxLength: 55}
    string districtName?;
    # Contains the flat number of the customer
    @constraint:String {maxLength: 70}
    string flatNumber?;
    # Department identifier
    @constraint:String {maxLength: 70}
    string departmentId?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    CustomerProfileResponseBodyCustomerNames[] customerNames?;
    # Identifies the international calling prefix code of the phone or mobile number
    @constraint:String {maxLength: 16}
    string iddPrefixPhone?;
    # Contains the party or service which was used for address confirmation purposes
    @constraint:String {maxLength: 35}
    string addressVerifier?;
    # Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)
    @constraint:String {maxLength: 35}
    string addressPurpose?;
    # Identifies the name of the building where customer resides
    @constraint:String {maxLength: 35}
    string buildingName?;
    # Indicates the extensions
    record {} extensions?;
    # Identifies the address postal code for the customer or the property
    CustomerPrintAddressBodyPostCodes[] postCodes?;
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 17}
    string phoneNumber?;
    # ISO Country code, IBAN number will be generated based on the structure of this country
    @constraint:String {maxLength: 2}
    string countryCode?;
    CustomerPrintAddressBodyTowns[] towns?;
    # Denotes the Short name registered for a customer
    CustomerProfileResponseBodyCustomerShortNames[] customerShortNames?;
    # Contains the floor number of the customer address
    @constraint:String {maxLength: 70}
    string floorNumber?;
    # Identifies the nature of the postal address, like primary, secondary or office address
    @constraint:String {maxLength: 35}
    string addressLocation?;
    # Identifies the building number where customer resides
    @constraint:String {maxLength: 16}
    string buildingNumber?;
    # Post Office Box (POB) number that relates to financial institution
    @constraint:String {maxLength: 16}
    string postBoxNumber?;
    # Represents a subdivision of a country such as state, region, country
    @constraint:String {maxLength: 35}
    string state?;
};

# Represents the Headers record for the operation: updateCustomerCharge
public type UpdateCustomerChargeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerRelationshipResponse1BodyInner record {
    # Details about the Customer Relationships and Party Relationships
    CustomerRelationshipResponse1BodyInner_originatingRelation[] originatingRelation?;
    # Identifies the key to Customer Relationship Group to form a relation
    @constraint:String {maxLength: 15}
    string customerRelationGroupId?;
    # Indicates the extension data
    record {} extensions?;
    # The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank
    @constraint:String {maxLength: 35}
    string purposeOfRelationship?;
    # Identifier of the Customer Relationship and Party Relationship
    @constraint:String {maxLength: 35}
    string relationId?;
    # Name of a Customer Relationship Group if applicable to the relationship
    @constraint:String {maxLength: 40}
    string customerRelationGroupName?;
};

# Represents the Queries record for the operation: getCustomerContacts
public type GetCustomerContactsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerRequests
public type GetCustomerRequestsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerResponse
public type CustomerResponse record {
    ScreenHeader header?;
    CustomerResponseBody body?;
};

public type FatcaCustomerBodyTinDetails record {
    # Identifies the Tax Identification Number of the Customer
    @constraint:String {maxLength: 35}
    string tinId?;
    # Identifies the country that the associated Tax Identification Number relates to
    @constraint:String {maxLength: 9}
    string tinCountry?;
};

public type CustomerRestrictionsResponseBody record {
    # Identifies any restrictions for posting entries that are imposed on a Customer
    CustomerRestrictionsResponseBodyPostingRestrictIds[] postingRestrictIds?;
    # Indicates the extensions
    record {} extensions?;
};

public type JointCustomerDetailsResponseBody JointCustomerDetailsResponseBodyInner[];

# Represents the Headers record for the operation: getStandingOrders
public type GetStandingOrdersHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateCustomerGroup
public type UpdateCustomerGroupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getAlertRequests
public type GetAlertRequestsQueries record {
    # Enables an alert service
    string subscribe?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Contains the contract reference
    string contractReference?;
    # The unique identifier of the alert request
    string alertRequestId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerPersonalDetailsResponseBodyInner_communicationDevice record {
    # Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.
    @constraint:String {maxLength: 35}
    string communicationType?;
    # Preferred method of contact to the customer
    @constraint:String {maxLength: 20}
    string preferredChannel?;
};

public type CustomerPhoneAddressResponse1Body record {
    # Identifies the international calling prefix code of the mobile
    @constraint:String {maxLength: 16}
    string iddPrefixMobile?;
    # Indicates the extensions
    record {} extensions?;
    # Mobile number of the customer
    @constraint:String {maxLength: 17}
    string mobileNumber?;
    # Denotes the Short name registered for a customer
    CustomerProfileResponseBodyCustomerShortNames[] customerShortNames?;
};

# CustomerAddressOutputResponse
public type CustomerAddressOutputResponse record {
    QueryHeader header?;
    CustomerAddressOutputResponseBody body?;
};

# Represents the Headers record for the operation: getCustomerInformation
public type GetCustomerInformationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createFatcaCustomer
public type CreateFatcaCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateFatcaCustomer
public type UpdateFatcaCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type BicOwnersResponseBodyInner record {
    # Bank Identifier Code (BIC) of the financial institution
    @constraint:String {maxLength: 11}
    string bicId?;
    # Indicates the extension data
    record {} extensions?;
    BicOwnersResponseBodyInner_bicdetails[] bicdetails?;
};

public type UnapprovedCustomerGroupPurposeResponseBodyInner_relationships record {
    # Indicates the list of allowed real relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedRelationship?;
};

# Represents the Headers record for the operation: getOtherBanksToConnectTo
public type GetOtherBanksToConnectToHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerClosureResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    # The field reflects the customer exit reason of the customer or prospect
    @constraint:String {maxLength: 80}
    string exitReason?;
    # Indicates if the customer who had exited the relationship with the bank is reopened
    @constraint:String {maxLength: 11}
    string reopenedDate?;
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # The field reflects the customer exit status of a customer or prospect
    @constraint:String {maxLength: 35}
    string exitStatus?;
    # General comments / notes
    @constraint:String {maxLength: 35}
    string remarks?;
    # The current status of the request. The possible values includes New, send to printer, cancelled and processed
    @constraint:String {maxLength: 35}
    string requestStatus?;
    # The field reflects the customer exit date of the customer or prospect
    @constraint:String {maxLength: 11}
    string exitDate?;
};

public type JointCustomerDetailsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Identifies the details of Customer in a Joint Relationship
    JointCustomerDetailsResponseBodyInner_jointCustomerDetails[] jointCustomerDetails?;
    # Identifier of the customer
    @constraint:Number {maxValue: 10}
    decimal customerId?;
};

public type CustomerPhoneAddressResponseBody CustomerPhoneAddressResponseBodyInner[];

# StandingOrdersResponse
public type StandingOrdersResponse record {
    QueryHeader header?;
    StandingOrdersResponseBody body?;
};

# Represents the Headers record for the operation: updateCustomer
public type UpdateCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createCustomerExitStatusParam
public type CreateCustomerExitStatusParamQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerContactsResponseBodyInner_emailIds record {
    # Contains the email identifier of the customer
    string emailId?;
};

# Represents the Headers record for the operation: getCustomerRelationships
public type GetCustomerRelationshipsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateCustomerClosure
public type UpdateCustomerClosureHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type DeliveryPreferenceBodyMessageGroupDetail record {
    # Indicates the Role of the Customer
    @constraint:String {maxLength: 35}
    string role?;
    # Identifies the position of the carrier in the arrangement
    @constraint:String {maxLength: 3}
    string carrierPosition?;
    # Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned
    @constraint:String {maxLength: 11}
    string endDate?;
    # Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y
    @constraint:String {maxLength: 3}
    string holdOutput?;
    # Indicates the formatting version to be used for the delivery message
    @constraint:String {maxLength: 2}
    string format?;
    # Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing
    @constraint:String {maxLength: 7}
    string holdMailOption?;
    # The language that the contents of the field are displayed in
    @constraint:String {maxLength: 2}
    string language?;
    # Defines the start date of the hold period when the delivery message is to be held in the system
    @constraint:String {maxLength: 11}
    string holdMailStartDate?;
    # Flag to set the channel to communicate
    @constraint:String {maxLength: 8}
    string required?;
    # Carrier to be used for processing the messages
    @constraint:String {maxLength: 10}
    string carrier?;
    # Specifies the number of copies of a message required
    @constraint:String {maxLength: 2}
    string copies?;
    # Defines the end date of the hold period when the delivery message is to be held in the system
    @constraint:String {maxLength: 11}
    string holdMailEndDate?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 11}
    string startDate?;
};

public type JointCustomerDetailsResponseBodyInner_deliveryOption record {
    # Role of joint customer with the main customer
    @constraint:Number {maxValue: 20}
    decimal jointRelationRoleId?;
    # Description of the joint customer role.
    @constraint:String {maxLength: 20}
    string jointRoleDisplayName?;
    # Additional notes about the role
    @constraint:String {maxLength: 35}
    string jointRelationRoleNotes?;
    # This is used to specify what delivery addressing is to be used for the link customer. 
    @constraint:String {maxLength: 8}
    string jointRelationDeliveryOption?;
    # Additional information of the role.
    @constraint:String {maxLength: 35}
    string jointRelationRoleInfo?;
};

public type CustomerResponseBodyTaxIds record {
    # Holds the Customer's TAX/SSN Id
    @constraint:String {maxLength: 55}
    string taxId?;
};

# Represents the Queries record for the operation: updateCustomerPrintAddress
public type UpdateCustomerPrintAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type OtherBanksToConnectToResponseBodyInner record {
    # globalURNSpecifies the GLOBAL.URN reference of the TPP (third party provider). This will be retrieved from the request and should match a GLOBAL.URN from a record within the Open Banking Directory
    @constraint:String {maxLength: 35}
    string globalUrn?;
    # Contains the code of the bank with which the transaction is performed
    string bankCode?;
    # Contains the identifier of the bank with which the transaction is performed
    string bankId?;
    # Indicates the extension data
    record {} extensions?;
    # Contains the templates used for payment transactions
    OtherBanksToConnectToResponseBodyInner_paymentTemplates[] paymentTemplates?;
    # The name of the bank being referred to
    @constraint:String {maxLength: 150}
    string bankName?;
    # Contains the name of the external source provider for the customer
    @constraint:String {maxLength: 35}
    string extSourceProvider?;
    # Contains the uniform resourcelocator of the logo
    @constraint:String {maxLength: 200}
    string logoURL?;
    # ISO country code of the financial institution. 
    @constraint:String {maxLength: 35}
    string countryId?;
};

# CustomerReportingStatusResponse
public type CustomerReportingStatusResponse record {
    QueryHeader header?;
    CustomerReportingStatusResponseBody body?;
};

public type CustomerReportingStatusResponseBodyInner_reportableJurisdictions record {
    # Indicates the residences of the participating jurisdictions of the reporting customer.
    string[] reportableJurisdiction?;
};

public type CustomerExitStatusResponseBody CustomerExitStatusResponseBodyInner[];

# Represents the Queries record for the operation: getCustomerOpportunities
public type GetCustomerOpportunitiesQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type DirectDebitsResponseBodyInner record {
    # Specifies an alternative easy means of referencing the Customer
    @constraint:String {maxLength: 200}
    string customerMnemonic?;
    # This is the payment amount
    @constraint:Number {maxValue: 19}
    decimal amount?;
    # Indicates next payment date for the contract
    string nextPaymentDate?;
    # Name or short title of the credit account
    @constraint:String {maxLength: 70}
    string creditorName?;
    # Defines whether the direct debit mandate is for stand-alone purpose i.e. one-off instruction
    @constraint:String {maxLength: 1}
    string standAloneDdi?;
    # Display name or short name of the account specified
    string accountName?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # The unique identifier of the direct debit mandate. 
    @constraint:String {maxLength: 25}
    string directDebitId?;
    # Contains bank sort code or iban branch identifier for the account
    @constraint:String {maxLength: 35}
    string sortCode?;
    # Current number of the record
    @constraint:String {maxLength: 4}
    string versionNumber?;
    # Specifies the frequency in which the payment application(periodic payments) execute the payment instruction
    @constraint:String {maxLength: 50}
    string frequency?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Indicates the extension data
    record {} extensions?;
    # The name that is displayed for the currency
    string currencyName?;
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Credit account identifier of the payment or transaction
    @constraint:String {maxLength: 35}
    string creditAccountId?;
    # Contains the date on which the transaction or payment gets initiated
    string startDate?;
    # Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. 
    @constraint:String {maxLength: 10}
    string direction?;
    # Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED
    @constraint:String {maxLength: 35}
    string status?;
};

public type CustomerGroupPurposeBodyGroupTypes record {
    # Details about the Customer Relationships and Party Relationships
    CustomerGroupPurposeBodyRelationships[] relationships?;
    # Indicates the type of entity that identifies the group eg. Parent or Member
    @constraint:String {maxLength: 35}
    string groupType?;
    CustomerGroupPurposeBodyGroupRelationships[] groupRelationships?;
    CustomerGroupPurposeBodyAggregateRelationships[] aggregateRelationships?;
};

# Represents the Queries record for the operation: createProspectCustomer
public type CreateProspectCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerGroupPurposeResponseBody record {
    # Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    @constraint:String {maxLength: 35}
    string allowGroupRelationship?;
    CustomerGroupPurposeBodyGroupTypes[] groupTypes?;
    # Indicates the extensions
    record {} extensions?;
    # Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups
    @constraint:String {maxLength: 35}
    string groupLevelUniqueCustomer?;
    # Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank
    @constraint:String {maxLength: 35}
    string groupPurpose?;
    # Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    @constraint:String {maxLength: 35}
    string allowRelationship?;
    # Contains the description of purpose of the payment
    @constraint:String {maxLength: 35}
    string description?;
    # Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank
    @constraint:String {maxLength: 35}
    string subGroupLevelUniqueCustomer?;
};

public type OtherBanksToConnectToResponseBody OtherBanksToConnectToResponseBodyInner[];

public type CustomerPostingRestrictionsResponseBody CustomerPostingRestrictionsResponseBodyInner[];

public type CustomerInformationResponseBodyInner_taxIds record {
    # Holds the Customer's TAX/SSN Id.
    @constraint:String {maxLength: 35}
    string taxId?;
};

# Represents the Queries record for the operation: createDeliveryPreference
public type CreateDeliveryPreferenceQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerPersonalDetailsResponseBody CustomerPersonalDetailsResponseBodyInner[];

public type CustomerInformationResponseBodyInner_preferredChannels record {
    # Preferred method of contact to the customer
    @constraint:String {maxLength: 20}
    string preferredChannel?;
};

# CustomerExitStatusParamResponse1
public type CustomerExitStatusParamResponse1 record {
    ScreenHeader header?;
    CustomerExitStatusParamResponse1Body body?;
};

# CustomerOpportunitiesResponse
public type CustomerOpportunitiesResponse record {
    QueryHeader header?;
    CustomerOpportunitiesResponseBody body?;
};

public type CustomerConsentsResponseBodyInner_consentTypes record {
    # Consent Type for which the consent is given
    string consentType?;
    # Identifies whether the consent has been given to the customer to perform the transaction
    string consentGiven?;
    # Indicates whether consent is blocked or not. No personal data of the Client will be shared by the Bank for any purpose when the consent is blocked.
    string consentBlock?;
    # Indicates the reason for which the consent is blocked.
    string blockNotes?;
    # Identifies whether the consent has been withdrawn to the customer to perform the transaction
    string consentWithdraw?;
    # Notes to facilitate why the consent has been withdrawn
    string withdrawNotes?;
    # Contains the name of the type of consent given to the customer
    string consentTypeName?;
    CustomerConsentsResponseBodyInner_subTypes[] subTypes?;
};

public type CustomerPrintAddressResponseBodyInner record {
    # Contains a sub-division identifier of a large organisation or building
    @constraint:String {maxLength: 70}
    string subDepartmentId?;
    # Contains the communication address of the customer or full address of the property
    CustomerPrintAddressResponseBodyInner_addresses[] addresses?;
    # Identifies specific location name with in the country or town
    @constraint:String {maxLength: 35}
    string locationName?;
    # Contains the street name of the customer or the property
    PartyBasicDetailsResponseBodyInner_streets[] streets?;
    # Stores the district name of the  Beneficiary Customer
    @constraint:String {maxLength: 35}
    string districtName?;
    # Contains the flat number of the customer
    @constraint:String {maxLength: 70}
    string flatNumber?;
    # Department identifier
    @constraint:String {maxLength: 70}
    string departmentId?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    CustomerPrintAddressResponseBodyInner_customerNames[] customerNames?;
    # Identifies the international calling prefix code of the phone or mobile number
    @constraint:String {maxLength: 16}
    string iddPrefixPhone?;
    # Contains the party or service which was used for address confirmation purposes
    @constraint:String {maxLength: 35}
    string addressVerifier?;
    # Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)
    @constraint:String {maxLength: 35}
    string addressPurpose?;
    # Identifier of the customer address table
    @constraint:String {maxLength: 1000}
    string customerAddressId?;
    # Identifies the name of the building where customer resides
    @constraint:String {maxLength: 35}
    string buildingName?;
    # Indicates the extension data
    record {} extensions?;
    # Identifies the address postal code for the customer or the property
    PartyBasicDetailsResponseBodyInner_postCodes[] postCodes?;
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 17}
    string phoneNumber?;
    # ISO Country code, IBAN number will be generated based on the structure of this country
    @constraint:String {maxLength: 2}
    string countryCode?;
    CustomerPrintAddressResponseBodyInner_towns[] towns?;
    # Denotes the Short name registered for a customer
    CustomerPrintAddressResponseBodyInner_customerShortNames[] customerShortNames?;
    # Contains the floor number of the customer address
    @constraint:String {maxLength: 70}
    string floorNumber?;
    # Identifies the nature of the postal address, like primary, secondary or office address
    @constraint:String {maxLength: 35}
    string addressLocation?;
    # Identifies the building number where customer resides
    @constraint:String {maxLength: 16}
    string buildingNumber?;
    # Post Office Box (POB) number that relates to financial institution
    @constraint:String {maxLength: 16}
    string postBoxNumber?;
    # Represents a subdivision of a country such as state, region, country
    @constraint:String {maxLength: 35}
    string state?;
};

public type ProspectCustomerBodySocialNetworkIds record {
    # Social Network Identification of the person/entity
    @constraint:String {maxLength: 70}
    string socialNetworkId?;
};

# CustomerClosureResponse
public type CustomerClosureResponse record {
    ScreenHeader header?;
    CustomerClosureResponseBody body?;
};

# Represents the Headers record for the operation: createDeliveryPreference
public type CreateDeliveryPreferenceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerPhoneAddress
public type GetCustomerPhoneAddressQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Reference Id of address record
    string addressId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type ProspectCustomerBodyCustomerNames record {
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 40}
    string customerName?;
};

# Represents the Headers record for the operation: createCustomerWithId
public type CreateCustomerWithIdHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type PartyRelationshipBodyPartyDisplayNames record {
    # A description of the Party Relationship
    @constraint:String {maxLength: 35}
    string partyDisplayName?;
};

# Represents the Queries record for the operation: updateCustomerClosure
public type UpdateCustomerClosureQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: approveCustomerGroup
public type ApproveCustomerGroupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerDeliveryOptions
public type GetCustomerDeliveryOptionsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerReportingStatusResponseBody CustomerReportingStatusResponseBodyInner[];

public type CustomerResponseBodyRelationshipDetails record {
    # Relationship code for the Related Customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal reverseJointRelationCode?;
    # Joint or related customer id
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal jointCustomer?;
    # The identifier of the relationship between joint holder and owner 
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal jointRelationCode?;
    CustomerResponseBodyRoleDetails[] roleDetails?;
};

public type CustomerRelationshipBodyOriginatingRelation record {
    # Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership
    @constraint:String {maxLength: 6}
    string owningPercent?;
    # Effective date from which there is a relationship between originating party and the portfolio
    string partyEffectiveDate?;
    # Details about the Customer Relationships and Party Relationships
    CustomerRelationshipBodyRelationships[] relationships?;
    # Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute
    @constraint:String {maxLength: 35}
    string relationReference?;
    # Contains the identifier used for the role played by the party or customer in the contract or account
    @constraint:String {maxLength: 20}
    string partyRole?;
    # Originating Party's relationship to the underlying portfolio. Should be a valid relationship
    @constraint:String {maxLength: 3}
    string partyRelation?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 10}
    string partyId?;
    # Specifies customer information
    @constraint:String {maxLength: 35}
    string party?;
};

public type CustomerChargeBodyTaxGroups record {
    # Defines the Default Tax Group which the Customer is calculated to be a member of for the associated tax type
    @constraint:String {maxLength: 14}
    string defaultTaxGroup?;
    # Type of Tax identification number, eg, Social Security, Individual Tax Identification Number, etc,
    @constraint:String {maxLength: 10}
    string taxIdType?;
    # Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type
    @constraint:String {maxLength: 14}
    string taxGroup?;
};

# Represents the Queries record for the operation: getPartyRelationship
public type GetPartyRelationshipQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: updateCustomerPrintAddress
public type UpdateCustomerPrintAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerContactsResponse
public type CustomerContactsResponse record {
    QueryHeader header?;
    CustomerContactsResponseBody body?;
};

public type PartyBasicDetailsResponseBodyInner_nameAliases record {
    # Contains the alias name or additional surname of the customer
    @constraint:String {maxLength: 35}
    string nameAlias?;
};

# Represents the Headers record for the operation: createCustomerPrintAddress
public type CreateCustomerPrintAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerResponseBodyContactDetails record {
    # Indicates the contact data of customer used for communication such as phone or mobile or e-mail address
    @constraint:String {maxLength: 254}
    string contactData?;
    # Identifies the international calling prefix code of the phone or mobile number
    @constraint:String {maxLength: 56}
    string iddPrefixPhone?;
    # Types of contacts available to users to communicate
    @constraint:String {maxLength: 55}
    string contactType?;
};

public type CustomerInformationResponseBodyInner_mobilePhoneNumbers record {
    # Represents the phone number of a customer
    @constraint:String {maxLength: 20}
    string mobilePhoneNumber?;
};

public type ProspectCustomersResponseBodyInner record {
    # Contains the communication address of the customer or full address of the property
    CustomerPrintAddressResponseBodyInner_addresses[] addresses?;
    # Contains the street name of the customer or the property
    ProspectCustomersResponseBodyInner_streets[] streets?;
    # This is the country name that the financial institution resides in
    ProspectCustomersResponseBodyInner_countryNames[] countryNames?;
    # Gender of the Individual Customer
    @constraint:String {maxLength: 35}
    string gender?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    ProspectCustomersResponseBodyInner_customerNames[] customerNames?;
    # Identify which country an entity has been registered
    @constraint:String {maxLength: 2}
    string registeredCountry?;
    # Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity
    @constraint:String {maxLength: 35}
    string personEntity?;
    # Identifies the legal entity details of prospect customer
    ProspectCustomersResponseBodyInner_prospectLegalDetails[] prospectLegalDetails?;
    # Indicates the extension data
    record {} extensions?;
    # Identifies the address postal code for the customer or the property
    PartyBasicDetailsResponseBodyInner_postCodes[] postCodes?;
    # Date on which the entity is incorporated
    string birthIncorpDate?;
    # The town and country associated with the address
    PartyBasicDetailsResponseBodyInner_townCountries[] townCountries?;
    # Identifies the social networks of the Customer
    ProspectCustomersResponseBodyInner_socialNetworks[] socialNetworks?;
    # Identifes the prospect customer network details like Phone number, email
    ProspectCustomersResponseBodyInner_prospectNetworks[] prospectNetworks?;
};

# Represents the Queries record for the operation: deleteCustomerGroup
public type DeleteCustomerGroupQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerInformationResponseBodyInner_emails record {
    # Email Identifier of the Customer
    @constraint:String {maxLength: 60}
    string email?;
};

public type CustomerChargeResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    # Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type
    CustomerChargeBodyTaxGroups[] taxGroups?;
};

public type PartyRelationshipResponse1Body PartyRelationshipResponse1BodyInner[];

# CustomerPrintAddressResponse1
public type CustomerPrintAddressResponse1 record {
    ScreenHeader header?;
    CustomerPrintAddressResponse1Body body?;
};

public type CustomerProfileResponseBody record {
    # Identifies the country of the customer or a property or organization
    @constraint:String {maxLength: 35}
    string country?;
    # Contains a sub-division identifier of a large organisation or building
    @constraint:String {maxLength: 70}
    string subDepartmentId?;
    # The date of birth of an individual customer
    @constraint:String {maxLength: 11}
    string dateofBirth?;
    # Specifies the number of dependents to the customer
    @constraint:String {maxLength: 2}
    string numberOfDependents?;
    # Name of the person who introduced the Customer to the bank
    @constraint:String {maxLength: 35}
    string introducer?;
    # Date that first contact was made with the Customer
    @constraint:String {maxLength: 11}
    string contactDate?;
    # Department identifier
    @constraint:String {maxLength: 70}
    string departmentId?;
    # Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments
    @constraint:String {maxLength: 35}
    string residenceType?;
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    @constraint:String {maxLength: 35}
    string customerType?;
    # Identifies the building number where customer resides
    @constraint:String {maxLength: 16}
    string buildingNumber?;
    # Indicates first line of the address of the BIC
    @constraint:String {maxLength: 35}
    string addressLine1?;
    # Indicates second line of the address of the BIC
    @constraint:String {maxLength: 35}
    string addressLine2?;
    # Represents a subdivision of a country such as state, region, country
    @constraint:String {maxLength: 35}
    string state?;
    # The town and/or city component of the base address of a customer
    @constraint:String {maxLength: 35}
    string addressCity?;
    # An institution-defined identifier of the type of customer
    @constraint:String {maxLength: 100000}
    string sectorId?;
    # Indicates the rating of the customer
    CustomerProfileResponseBodyCustomerRatings[] customerRatings?;
    # The identifier of the nationality of a customer
    @constraint:String {maxLength: 2}
    string nationalityId?;
    # The identifier of the country of residence of a customer
    @constraint:String {maxLength: 2}
    string residenceId?;
    # Identifies the name of the building where customer resides
    @constraint:String {maxLength: 35}
    string buildingName?;
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 4}
    string accountOfficer?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 11}
    string companyId?;
    # Indicates the extensions
    record {} extensions?;
    # Denotes the Short name registered for a customer
    CustomerProfileResponseBodyCustomerShortNames[] customerShortNames?;
    # Customers native language or the language that can be used for communication
    CustomerProfileResponseBodySpokenLanguages[] spokenLanguages?;
    # Identifies the address postal code for the customer or the property
    @constraint:String {maxLength: 35}
    string postCode?;
    # Contains the alias name or additional surname of the customer
    CustomerProfileResponseBodyNameAliases[] nameAliases?;
    # Contains the greeting to be used for communications with the customer
    @constraint:String {maxLength: 70}
    string salutation?;
    # Marital status of the customer
    @constraint:String {maxLength: 35}
    string maritalStatus?;
    # Identifies the apartment number of the customer address
    @constraint:String {maxLength: 70}
    string apartmentNumber?;
    # Other officers managing the Customer
    CustomerResponseBodyOtherOfficers[] otherOfficerIds?;
    # The date on which the bank gets the notification that the customer is dead
    @constraint:String {maxLength: 51}
    string notificationDateOfDeath?;
    # Gender of the Individual Customer
    @constraint:String {maxLength: 35}
    string gender?;
    # The death date of customer
    @constraint:String {maxLength: 51}
    string dateOfDeath?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    CustomerProfileResponseBodyCustomerNames[] customerNames?;
    # Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages
    @constraint:String {maxLength: 35}
    string title?;
    # The internal bank status of a customer
    @constraint:String {maxLength: 55}
    string customerStatus?;
    # Contains the street name of the customer or the property
    @constraint:String {maxLength: 70}
    string street?;
    # Contains the floor number of the customer address
    @constraint:String {maxLength: 70}
    string floorNumber?;
    # Continuation/Extension to the Customer Name
    CustomerProfileResponseBodyCustomerNameAdditionals[] customerNameAdditionals?;
    # Industry associated with the Customer
    @constraint:String {maxLength: 200}
    string industryName?;
    # Identifies specific location name with in the country or town
    @constraint:String {maxLength: 35}
    string locationName?;
    # Represents the language code of the underlying Entity/Company/Branch
    @constraint:String {maxLength: 2}
    string languageId?;
    # Contains the party or service which was used for address confirmation purposes
    @constraint:String {maxLength: 35}
    string addressVerifier?;
    # Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)
    @constraint:String {maxLength: 35}
    string addressPurpose?;
    # Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy
    @constraint:String {maxLength: 4}
    string target?;
    # Date Since Customer is held in the system
    @constraint:String {maxLength: 11}
    string customerSince?;
    # Date on which the entity is incorporated
    @constraint:String {maxLength: 11}
    string birthIncorpDate?;
    # Identifies the citizenship details of Customer
    CustomerProfileResponseBodyCitizenships[] citizenships?;
    # Post Office Box (POB) number that relates to financial institution
    @constraint:String {maxLength: 16}
    string postBoxNumber?;
    # The town and country associated with the address
    @constraint:String {maxLength: 35}
    string townCountry?;
};

public type CustomerContactsResponseBodyInner_phoneNumbers record {
    # The phone number of the customer or prospect
    string phoneNumber?;
};

# Represents the Headers record for the operation: getCustomerCharge
public type GetCustomerChargeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerResponseBodyCommunicationDevices record {
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 57}
    string phoneNumber?;
    # Preferred method of contact to the customer
    @constraint:String {maxLength: 50}
    string preferredChannel?;
    # The mobile SMS number of the customer
    @constraint:String {maxLength: 57}
    string smsNumber?;
    # Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement
    @constraint:String {maxLength: 55}
    string communicationType?;
    # Email Identifier of the Customer
    @constraint:String {maxLength: 50}
    string email?;
};

# CustomerPrintAddressResponse
public type CustomerPrintAddressResponse record {
    QueryHeader header?;
    CustomerPrintAddressResponseBody body?;
};

public type CustomerInformationResponseBodyInner record {
    # Specifies an alternative easy means of referencing the Customer
    @constraint:String {maxLength: 200}
    string customerMnemonic?;
    # The last name of an individual customer
    @constraint:String {maxLength: 50}
    string lastName?;
    # Contains the communication address of the customer or full address of the property
    CustomerInformationResponseBodyInner_addresses[] addresses?;
    # Describes the target in an abbreviated form which can be used for reporting when space is limited.This can be expanded to allow the User to enter a short description of the Target code in various languages. 
    @constraint:String {maxLength: 200}
    string targetName?;
    # The date on which the bank gets the notification that the customer is dead
    string notificationDateOfDeath?;
    # Gender of the Individual Customer
    @constraint:String {maxLength: 40}
    string gender?;
    # The death date of customer
    string dateOfDeath?;
    # Identifies any restrictions for posting entries that are to be imposed on the Account
    CustomerInformationResponseBodyInner_postingRestrictions[] postingRestrictions?;
    # Name of the Nationality of the Customer
    @constraint:String {maxLength: 200}
    string nationalityName?;
    # Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management
    CustomerInformationResponseBodyInner_profileTypes[] profileTypes?;
    # The language that the contents of the field are displayed in
    @constraint:String {maxLength: 20}
    string language?;
    # Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages
    @constraint:String {maxLength: 25}
    string title?;
    # Holds the Customer's TAX/SSN Id
    CustomerInformationResponseBodyInner_taxIds[] taxIds?;
    # Represents the language name of the underlying Entity/Company/Branch
    @constraint:String {maxLength: 200}
    string languageName?;
    # The internal bank status of a customer
    @constraint:String {maxLength: 40}
    string customerStatus?;
    # An institution-defined identifier of the industry in which the customer is trading, operating or is associated with
    @constraint:Number {maxValue: 100000}
    decimal industryId?;
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    @constraint:String {maxLength: 35}
    string customerType?;
    # The fax (facsimile) number of the customer
    @constraint:String {maxLength: 27}
    string faxId?;
    # The identifier of the department head or specific account officer responsible for the customer
    @constraint:Number {maxValue: 100000}
    decimal accountOfficerId?;
    # Identifier of the customer
    @constraint:String {maxLength: 30}
    string customerId?;
    # An institution-defined high level description or segmentation of the customer
    @constraint:String {maxLength: 200}
    string statusName?;
    # Name of the account or relationship officer attached to the Customer
    @constraint:String {maxLength: 200}
    string accountOfficerName?;
    # Name of the residence country
    @constraint:String {maxLength: 200}
    string residenceName?;
    # Industry associated with the Customer
    @constraint:String {maxLength: 200}
    string industryName?;
    # An institution-defined identifier of the type of customer
    @constraint:Number {maxValue: 100000}
    decimal sectorId?;
    # Indicates the customer consolidation number for credit grouping purposes, within the same branch/country
    @constraint:String {maxLength: 40}
    string customerLiability?;
    CustomerInformationResponseBodyInner_employmentDetails[] employmentDetails?;
    # The identifier of the nationality of a customer
    @constraint:String {maxLength: 40}
    string nationalityId?;
    # The date of birth of an individual customer
    string dateOfBirth?;
    # An institution-defined identifier of the type of customer
    @constraint:String {maxLength: 40}
    string sectorName?;
    # Contains the contact details of the customer
    CustomerInformationResponseBodyInner_contactDetails[] contactDetails?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 35}
    string customerName?;
    # The identifier of the country of residence of a customer
    @constraint:String {maxLength: 40}
    string residenceId?;
    # Current number of the record
    @constraint:String {maxLength: 60}
    string versionNumber?;
    # Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy
    @constraint:String {maxLength: 40}
    string target?;
    CustomerInformationResponseBodyInner_legalDocuments[] legalDocuments?;
    # Date Since Customer is held in the system
    string customerSince?;
    # Specifies customer's first name
    @constraint:String {maxLength: 50}
    string firstName?;
    # Other Nationality of the Customer
    CustomerInformationResponseBodyInner_otherNationalityIds[] otherNationalityIds?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 21}
    string companyId?;
    # Indicates the extension data
    record {} extensions?;
    # Date on which the entity is incorporated
    string birthIncorpDate?;
    # Continuation/Extension to the Customer Name
    @constraint:String {maxLength: 70}
    string customerNameAdditional?;
    # The type of vulnerability (physical impairment) the customer had
    CustomerInformationResponseBodyInner_vulnerabilities[] vulnerabilities?;
    # Preferred method of contact to the customer
    CustomerInformationResponseBodyInner_preferredChannels[] preferredChannels?;
    CustomerInformationResponseBodyInner_relCust[] relCust?;
    # Marital status of the customer
    @constraint:String {maxLength: 45}
    string maritalStatus?;
};

# Represents the Headers record for the operation: updateCustomerExitStatusParam
public type UpdateCustomerExitStatusParamHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerPrintAddressResponseBodyInner_addresses record {
    # Contains the communication address of the customer or full address of the property
    @constraint:String {maxLength: 35}
    string address?;
};

# Represents the Headers record for the operation: createCustomerStaticChange
public type CreateCustomerStaticChangeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: deleteCustomerGroupPurpose
public type DeleteCustomerGroupPurposeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerInformationResponseBodyInner_relCust record {
    # Customers linked or related to the arrangement owner
    @constraint:String {maxLength: 30}
    string relCustomer?;
    # Relationship identifier between the partyType and relatedPartyType
    @constraint:String {maxLength: 30}
    string relationshipCode?;
    # Specifies related customer's first name
    @constraint:String {maxLength: 200}
    string relCustomerFirstName?;
    # The last name of the related customer
    @constraint:String {maxLength: 40}
    string relCustomerLastName?;
    # The date of birth of the related customer
    string relCustomerDateOfBirth?;
    # Holds the related Customer's TAX/SSN Id.
    @constraint:String {maxLength: 30}
    string relCustomerTaxId?;
    # The phone number of the related customer or prospect
    @constraint:String {maxLength: 100}
    string relCustomerPhoneNumber?;
    # Email Identifier of the related Customer
    @constraint:String {maxLength: 200}
    string relCustomerEmail?;
    # Identifies the address postal code of the related customer.
    @constraint:String {maxLength: 30}
    string relCustomerPostCode?;
    # Contains the first line of the related customer's base address, example building number, street number etc.
    @constraint:String {maxLength: 200}
    string relCustomerStreet?;
    # Indicates the town and country associated with the address of the related customer
    @constraint:String {maxLength: 200}
    string relCustomerTownCountry?;
    # Identifies the greeting used for communicating with the related customer
    @constraint:String {maxLength: 30}
    string relCustomerSalutation?;
    # Indicates the Marital status of the related customer
    @constraint:String {maxLength: 30}
    string relCustomerMaritalStatus?;
    # Identifies the employment status of the related customer
    @constraint:String {maxLength: 30}
    string relCustomerEmploymentStatus?;
};

# Represents the Queries record for the operation: updateCustomerCharge
public type UpdateCustomerChargeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: updateCustomerGroup
public type UpdateCustomerGroupQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerExitStatusResponse1Body record {
    # Indicates the extensions
    record {} extensions?;
    # The field reflects the customer exit reason of the customer or prospect
    @constraint:String {maxLength: 80}
    string exitReason?;
    # The field reflects the customer exit status of a customer or prospect
    @constraint:String {maxLength: 35}
    string exitStatus?;
};

# Represents the Headers record for the operation: getProspectCustomers
public type GetProspectCustomersHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerResponseBodyResidenceDetails record {
    # Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments
    @constraint:String {maxLength: 55}
    string residenceType?;
    # The date since the user has obtained the residence
    string residenceSince?;
    # Market Value of the customer's residence
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal residenceValue?;
    # Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc
    @constraint:String {maxLength: 55}
    string residenceStatus?;
    # Mortgage value of the residence property of the customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal residenceMortgageValue?;
};

# Represents the Headers record for the operation: getCustomerProfile
public type GetCustomerProfileHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerInformation
public type GetCustomerInformationQueries record {
    # Specifies an alternative easy means of referencing the Customer
    string customerMnemonic?;
    # The last name of an individual customer
    string lastName?;
    # The office phone number of the customer
    string officePhoneNumber?;
    # ISO country code of the financial institution. 
    string countryId?;
    # The internal bank status of a customer
    string customerStatus?;
    # An institution-defined identifier of the industry in which the customer is trading, operating or is associated with
    string industryId?;
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    string customerType?;
    # The fax (facsimile) number of the customer
    string faxId?;
    # The identifier of the department head or specific account officer responsible for the customer
    string accountOfficerId?;
    # Contains the street name of the customer or the property
    string street?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    string legalDocumentName?;
    # Email Identifier of the Customer
    string email?;
    # The town and/or city component of the base address of a customer
    string addressCity?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
    # Represents the phone number of a customer
    string mobilePhoneNumber?;
    # An institution-defined identifier of the type of customer
    string sectorId?;
    # Contains the communication address of the customer or full address of the property
    string address?;
    # The identifier of the nationality of a customer
    string nationalityId?;
    # Unique reference number of the legal documents submitted as identification proof
    string legalId?;
    # The date of birth of an individual customer
    string dateOfBirth?;
    # Relationship identifier between the partyType and relatedPartyType
    string relationshipCode?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    string customerName?;
    # The identifier of the country of residence of a customer
    string residenceId?;
    # Specifies customer's first name
    string firstName?;
    # The phone number of the customer or prospect
    string phoneNumber?;
    # Holds the Customer's TAX/SSN Id
    string taxId?;
    # Date on which the entity is incorporated
    string birthIncorpDate?;
    # Continuation/Extension to the Customer Name
    string customerNameAdditional?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Identifies the address postal code for the customer or the property
    string postCode?;
    # Contains the name of the account, basically the short title of the account
    string shortName?;
    # Customers linked or related to the arrangement owner
    string relCustomer?;
};

# Represents the Queries record for the operation: createCustomerWithId
public type CreateCustomerWithIdQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerResponseBodyStreets record {
    # Contains the street name of the customer or the property
    @constraint:String {maxLength: 70}
    string street?;
};

# Represents the Headers record for the operation: createMessages
public type CreateMessagesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerPersonalDetailsResponse
public type CustomerPersonalDetailsResponse record {
    QueryHeader header?;
    CustomerPersonalDetailsResponseBody body?;
};

# Represents the Headers record for the operation: getJointCustomerDetails
public type GetJointCustomerDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerExitStatusParam
public type GetCustomerExitStatusParamQueries record {
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    string customerType?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerInformationResponseBodyInner_Contacts record {
    # Types of contacts available to users to communicate
    @constraint:String {maxLength: 35}
    string contactType?;
    # Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.
    @constraint:String {maxLength: 254}
    string contactData?;
    # Identifies the international calling prefix code of the phone or mobile number.
    @constraint:String {maxLength: 16}
    string iddPrefixPhone?;
};

public type CustomerGroupBodyPrimaryPartyDetails record {
    # Identifier of the customer defined as the primary party in an aggregate relationship
    @constraint:String {maxLength: 40}
    string primaryPartyId?;
    # Indicates the type of primary customer which is part of the aggregate relationship. It may be Customer, Person or Entity
    @constraint:String {maxLength: 80}
    string primaryPartyType?;
};

public type CustomerGroupsResponseBodyInner record {
    # Contains primary pary details such as primary party id and primary party type
    CustomerGroupsResponseBodyInner_primaryPartyDetails[] primaryPartyDetails?;
    # The name that is displayed for the group
    @constraint:String {maxLength: 40}
    string groupName?;
    # Indicates the type of entity that identifies the group eg. Parent or Member
    @constraint:String {maxLength: 25}
    string groupType?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 9}
    string companyId?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the details of Relationship maintained by the Customer or Entity
    CustomerGroupsResponseBodyInner_relationshipDetails[] relationshipDetails?;
    # Contains sub group details such as sub group id, sub group name, sub group customer etc
    UnapprovedCustomerGroupResponseBodyInner_subGroupDetails[] subGroupDetails?;
    # Unique ID of the group
    @constraint:String {maxLength: 35}
    string groupId?;
    # Identifier of the Liability Customer to the credit limit
    @constraint:String {maxLength: 10}
    string liabilityNumber?;
    # Contains the description of purpose of the payment
    @constraint:String {maxLength: 35}
    string description?;
    # Identifier of customer group purpose
    @constraint:String {maxLength: 15}
    string groupPurposeId?;
};

# Represents the Headers record for the operation: getCustomerExitStatusParam
public type GetCustomerExitStatusParamHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerClosure
public type GetCustomerClosureQueries record {
    # Identifier of customer closure request
    string customerClosureId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The current status of the request. The possible values includes New, send to printer, cancelled and processed
    string requestStatus?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerPhoneAddress
public type GetCustomerPhoneAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerResponseBodyOtherOfficers record {
    # Other officers managing the Customer
    @constraint:String {maxLength: 50}
    string otherOfficerId?;
};

# Represents the Headers record for the operation: getCustomerRestrictions
public type GetCustomerRestrictionsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerSwiftAddressResponseBody CustomerSwiftAddressResponseBodyInner[];

# Represents the Headers record for the operation: updateCustomerPhoneAddress
public type UpdateCustomerPhoneAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerDigitalChannelsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Indicates whether is Customer is subscribed to the mobile banking service or not
    boolean isMobileBankingService?;
    # Contains the external user identifier for which the consent is created
    @constraint:String {maxLength: 70}
    string externalUserId?;
    # Indicates whether is Customer is subscribed to the internet banking service or not
    boolean isInternetBankingService?;
    # Identifier of the customer
    @constraint:Number {maxValue: 10}
    decimal customerId?;
    # Specific channels details for a customer
    CustomerDigitalChannelsResponseBodyInner_digitalChannels[] digitalChannels?;
    # The type of authentication for this external user. It should be either External or User Maintained
    @constraint:String {maxLength: 35}
    string authenticationType?;
    # External or Digital Channel User Name
    @constraint:String {maxLength: 70}
    string externalUserName?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 10}
    string customerName?;
};

# Represents the Headers record for the operation: getCustomerReportingStatus
public type GetCustomerReportingStatusHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type UnapprovedCustomerGroupResponseBodyInner_relationshipDetails record {
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY.
    @constraint:String {maxLength: 13}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.
    @constraint:String {maxLength: 10}
    string partyId?;
    # Indicates the related party's customer type. It may be Customer, Person or Entity.
    @constraint:String {maxLength: 13}
    string relatedPartyType?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 10}
    string relatedPartyId?;
};

# CustomerShortNamesResponse
public type CustomerShortNamesResponse record {
    ScreenHeader header?;
    CustomerShortNamesResponseBody body?;
};

# Represents the Headers record for the operation: getDirectDebits
public type GetDirectDebitsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerGroupBodyRelationshipDetails record {
    # Indicates the description of the relationship between parties
    @constraint:String {maxLength: 13}
    string relationshipName?;
    # Indicates the related party's customer type. It may be Customer, Person or Entity
    @constraint:String {maxLength: 13}
    string relatedPartyType?;
    # Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of
    @constraint:String {maxLength: 3}
    string relationshipType?;
    # Indicates the nature of the relationship between the two group of parties
    @constraint:String {maxLength: 3}
    string groupRelationshipType?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 10}
    string relatedPartyId?;
    # Indicates whether the party can be excluded from the customer group. Allowed values are YES or Blank
    @constraint:String {maxLength: 3}
    string excludeParty?;
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY
    @constraint:String {maxLength: 13}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 10}
    string partyId?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 11}
    string startDate?;
    # Contains the percentage contributed by specific owner of the asset or collateral
    @constraint:String {maxLength: 6}
    string ownershipPercentage?;
};

# Represents the Queries record for the operation: getJointCustomerDetails
public type GetJointCustomerDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type QueryHeader record {
    ScreenHeaderAudit audit?;
    # The record from which the response should be displayed
    @jsondata:Name {value: "page_start"}
    int:Signed32 pageStart?;
    # The total number of records present
    @jsondata:Name {value: "total_size"}
    int:Signed32 totalSize?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @jsondata:Name {value: "page_token"}
    string pageToken?;
    # Status of the API(success/failed)
    string status?;
    # The total number of records per page
    @jsondata:Name {value: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Queries record for the operation: deleteCustomerEmailAddress
public type DeleteCustomerEmailAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: getCustomerPrintAddress
public type GetCustomerPrintAddressQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Reference Id of address record
    string addressId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerAddressOutputResponseBodyInner_structuredGroup record {
    # A list with address related details from Transact in structured format
    string structuredAddress?;
};

public type CustomerMandatesResponseBodyMandateDetails record {
    # Contains the application name for which the mandates check need to be followed. Any transaction processed by the application specified in this field will undergo mandate processing
    @constraint:String {maxLength: 55}
    string mandateApplication?;
    # Contains the identifier of the rule that needs to executed before applying mandate processing
    @constraint:String {maxLength: 35}
    string mandateRuleId?;
    # Contains mandate details of an account
    @constraint:String {maxLength: 35}
    string mandates?;
};

# CustomerConsentsResponse
public type CustomerConsentsResponse record {
    QueryHeader header?;
    CustomerConsentsResponseBody body?;
};

# Represents the Queries record for the operation: getProspectCustomers
public type GetProspectCustomersQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: createCustomerPhoneAddress
public type CreateCustomerPhoneAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerEmailAddressResponseBodyInner record {
    # Identifier of the customer address table
    @constraint:String {maxLength: 1000}
    string customerAddressId?;
    # Indicates the extension data
    record {} extensions?;
    # Denotes the Short name registered for a customer
    CustomerPhoneAddressResponseBodyInner_customerShortNames[] customerShortNames?;
    # Email Identifier of the Customer
    @constraint:String {maxLength: 254}
    string email?;
};

# CustomerRestrictionsResponse
public type CustomerRestrictionsResponse record {
    ScreenHeader header?;
    CustomerRestrictionsResponseBody body?;
};

# Represents the Queries record for the operation: createCustomerStaticChange
public type CreateCustomerStaticChangeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerStaticChangeResponseBody record {
    # This will capture the request time
    @constraint:String {maxLength: 5}
    string requestTime?;
    # Indicates the extensions
    record {} extensions?;
    # Identifier of the customer
    @constraint:String {maxLength: 15}
    string customerId?;
    # The name that is displayed for the event
    @constraint:String {maxLength: 90}
    string eventName?;
    # Contains the creation date
    @constraint:String {maxLength: 11}
    string creationDate?;
};

# Represents the Queries record for the operation: getCustomerSwiftAddress
public type GetCustomerSwiftAddressQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: deleteCustomerGroup
public type DeleteCustomerGroupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerSweeps
public type GetCustomerSweepsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerOpportunitiesResponseBodyInner record {
    # Indicates the sales opportunity score of a product
    @constraint:String {maxLength: 5}
    string score?;
    # Indicates the extension data
    record {} extensions?;
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
    # Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED
    @constraint:String {maxLength: 35}
    string status?;
};

# CustomerGroupResponse
public type CustomerGroupResponse record {
    ScreenHeader header?;
    CustomerGroupResponseBody body?;
};

# Represents the Queries record for the operation: createCustomerPrintAddress
public type CreateCustomerPrintAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# CustomerExitStatusResponse
public type CustomerExitStatusResponse record {
    QueryHeader header?;
    CustomerExitStatusResponseBody body?;
};

public type ProspectCustomersResponseBodyInner_socialNetworks record {
    # Social Network Identification of the person/entity
    @constraint:String {maxLength: 70}
    string socialNetworkId?;
};

# CustomerClosureResponse1
public type CustomerClosureResponse1 record {
    QueryHeader header?;
    CustomerClosureResponse1Body body?;
};

public type CustomerRelationshipResponse1BodyInner_originatingRelation record {
    # Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.
    @constraint:String {maxLength: 35}
    string relationReference?;
    # Specifies customer information.
    @constraint:String {maxLength: 35}
    string party?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.
    @constraint:String {maxLength: 10}
    string partyId?;
    # Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership
    @constraint:String {maxLength: 6}
    string owningPercent?;
    # Originating Party's relationship to the underlying portfolio. Should be a valid relationship.
    @constraint:String {maxLength: 35}
    string partyRelation?;
    # Contains the identifier used for the role played by the party or customer in the contract or account
    @constraint:String {maxLength: 20}
    string partyRole?;
    # Effective date from which there is a relationship between originating party and the portfolio.
    string partyEffectiveDate?;
    # Details about the Customer Relationships and Party Relationships
    CustomerRelationshipResponse1BodyInner_relationships[] relationships?;
};

# PartyRelationshipResponse1
public type PartyRelationshipResponse1 record {
    QueryHeader header?;
    PartyRelationshipResponse1Body body?;
};

public type CustomerInformationResponseBodyInner_employmentDetails record {
    # Identifies the employment status of the customer
    @constraint:String {maxLength: 45}
    string employmentStatus?;
};

public type CustomerClosureResponse1Body CustomerClosureResponse1BodyInner[];

public type CustomerInformationResponseBody CustomerInformationResponseBodyInner[];

public type CustomerResponseBodyEmployDetails record {
    # Occupation of the customer
    @constraint:String {maxLength: 35}
    string occupation?;
    # Gross Salary details of the customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal salaryAmount?;
    # Starting date of the customer's employment
    string employStartDate?;
    # Currency in which the Salary information of the customer is maintained
    @constraint:String {maxLength: 50}
    string salaryCurrency?;
    # Name of the customer's employer
    @constraint:String {maxLength: 150}
    string employerName?;
    # Employment Job Title of the Customer
    @constraint:String {maxLength: 55}
    string employJobTitle?;
    # Employment status of the customer
    @constraint:String {maxLength: 35}
    string employStatus?;
};

public type StandingOrdersResponseBodyInner_accountWithBanks record {
    # Identifies the bank where the beneficiary maintains his account
    @constraint:String {maxLength: 35}
    string accountWithBank?;
};

# Represents the Queries record for the operation: createCustomerCharge
public type CreateCustomerChargeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerRestrictionsResponseBodyPostingRestrictIds record {
    # Identifies any restrictions for posting entries that are imposed on a Customer
    @constraint:String {maxLength: 2}
    string postingRestrictId?;
};

# Represents the Headers record for the operation: deleteCustomerEmailAddress
public type DeleteCustomerEmailAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerSweepsResponseBody CustomerSweepsResponseBodyInner[];

public type StandingOrdersResponseBodyInner record {
    # Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled
    @constraint:String {maxLength: 5}
    string orderType?;
    # Account name details of the creditor
    string creditAccountName?;
    # This is used to specify a percentage value, which would be applied on the accounts excess amount(Accounts cleared balance - CURRENT.AMOUNT) to arrive at 
    @constraint:String {maxLength: 6}
    string percentageOverCurrentBalance?;
    # Country of the beneficiary account number. For example: US, IN, EU
    @constraint:String {maxLength: 2}
    string beneficiaryCountryId?;
    # Display name or short name of the account specified
    @constraint:String {maxLength: 35}
    string accountName?;
    # Indicates the name of payment order product 
    @constraint:String {maxLength: 10}
    string paymentOrderProductName?;
    # Identifies the bank where the beneficiary maintains his account
    StandingOrdersResponseBodyInner_accountWithBanks[] accountWithBanks?;
    # Indicates the date based on current frequency
    string currentFrequencyDate?;
    # Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)
    @constraint:String {maxLength: 3}
    string beneficiaryOurCharges?;
    # Specifies the frequency in which the payment application(periodic payments) execute the payment instruction
    @constraint:String {maxLength: 50}
    string frequency?;
    # BIC (Bank Identifier Code) of the beneficiary customer 
    @constraint:String {maxLength: 11}
    string beneficiaryBIC?;
    # Indicates the current frequency of the standing order
    @constraint:String {maxLength: 35}
    string currentFrequency?;
    # Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed
    string currentEndDate?;
    # Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided
    @constraint:String {maxLength: 10}
    string futureNotice?;
    # The unique standing order identifier
    @constraint:String {maxLength: 35}
    string standingOrderId?;
    # This field holds the reason for change in IB.STATUS field
    string payTo?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # This is the payment amount
    @constraint:Number {maxValue: 18}
    decimal amount?;
    # STO initiation start date
    string stoStartDate?;
    # Contains the name used for display or enrichment purposes
    StandingOrdersResponseBodyInner_displayNames[] displayNames?;
    # International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189
    @constraint:String {maxLength: 35}
    string beneficiaryIBAN?;
    # Current number of the record
    @constraint:String {maxLength: 6}
    string versionNumber?;
    # The identifier of the counter party's account
    @constraint:String {maxLength: 35}
    string counterPartyAccountId?;
    # Indicates the extension data
    record {} extensions?;
    # General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides
    @constraint:String {maxLength: 6}
    string recordStatus?;
    # The sort code or the national clearing code of the beneficiary bank. 
    string bankSortCode?;
    # Method chosen to make the payment
    @constraint:String {maxLength: 4}
    string paymentMethod?;
    # Credit account identifier of the payment or transaction
    string creditAccountId?;
    # Contains the date on which the transaction or payment gets initiated
    string startDate?;
    # Indicates the reference of the financial institution that allows access to the beneficiary information
    @constraint:String {maxLength: 17}
    string beneficiaryId?;
};

public type ProspectCustomersResponseBodyInner_customerNames record {
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation.
    @constraint:String {maxLength: 40}
    string customerName?;
};

# Represents the Headers record for the operation: getCustomerPersonalDetails
public type GetCustomerPersonalDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerGroupsResponseBody CustomerGroupsResponseBodyInner[];

public type StandingOrdersResponseBodyInner_displayNames record {
    # Contains the name used for display or enrichment purposes
    @constraint:String {maxLength: 35}
    string displayName?;
};

public type CustomerRelationshipsResponseBodyRelations record {
    # Details about the Customer Relationships and Party Relationships
    @constraint:String {maxLength: 3}
    string relationship?;
    # Identifies the Customer id details of the Related Customer
    @constraint:String {maxLength: 10}
    string relatedCustomerId?;
};

# CustomerExitStatusParamResponse
public type CustomerExitStatusParamResponse record {
    QueryHeader header?;
    CustomerExitStatusParamResponseBody body?;
};

# BicOwnersResponse
public type BicOwnersResponse record {
    QueryHeader header?;
    BicOwnersResponseBody body?;
};

# Represents the Headers record for the operation: createCustomerGroup
public type CreateCustomerGroupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type CustomerExitStatusParamResponseBodyInner record {
    # The field reflects the description of, respective customer exit status
    @constraint:String {maxLength: 70}
    string exitStatusDescription?;
    # Indicates the extension data
    record {} extensions?;
    # Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status
    @constraint:String {maxLength: 35}
    string allowRemoveExitStatus?;
    # The field indicates the reason for exiting a relation with a prospect or customer
    CustomerExitStatusParamResponseBodyInner_allowedExitReasons[] allowedExitReasons?;
    # The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS
    @constraint:String {maxLength: 35}
    string customerExitStatusId?;
};

# Represents the Queries record for the operation: createCustomerRelationship
public type CreateCustomerRelationshipQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: createCustomerGroup
public type CreateCustomerGroupQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerDeliveryOptionsResponseBodyInner_deliveryPreferences record {
    # Message group name that provides details of all Messages to be triggered.
    @constraint:String {maxLength: 35}
    string messageGroup?;
    # Carrier to be used for processing the messages
    @constraint:String {maxLength: 10}
    string carrier?;
    # Indicates if the related delivery carrier details will be added or removed as a preferred carrier for communication
    boolean isRequired?;
    # Contains the communication address of the customer or full address of the property
    @constraint:String {maxLength: 3}
    string address?;
};

# CustomerCreditCardsResponse
public type CustomerCreditCardsResponse record {
    QueryHeader header?;
    CustomerCreditCardsResponseBody body?;
};

public type CustomerProfileResponseBodyCustomerRatings record {
    # Indicates the rating of the customer
    @constraint:String {maxLength: 10}
    string customerRating?;
};

# Represents the Headers record for the operation: deleteCustomerPrintAddress
public type DeleteCustomerPrintAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: updateCustomerRelationship
public type UpdateCustomerRelationshipQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ScreenHeaderAudit record {
    # Time taken to response by Transact
    @jsondata:Name {value: "T24_time"}
    int:Signed32 t24Time?;
    # Time taken to parse the response by IRIS
    @jsondata:Name {value: "responseParse_time"}
    decimal responseParseTime?;
    # The CURR.NO. of the record
    string versionNumber?;
    # Time taken to parse the request by IRIS
    @jsondata:Name {value: "requestParse_time"}
    decimal requestParseTime?;
};

# Represents the Queries record for the operation: getCustomerReportingStatus
public type GetCustomerReportingStatusQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getPartyBasicDetails
public type GetPartyBasicDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateCustomerRelationship
public type UpdateCustomerRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateDeliveryPreference
public type UpdateDeliveryPreferenceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type PartyRelationshipResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    PartyRelationshipBodyPartyRelationships[] partyRelationships?;
    # A description of the Party Relationship
    PartyRelationshipBodyPartyDisplayNames[] partyDisplayNames?;
};

# Represents the Queries record for the operation: getPartyBasicDetails
public type GetPartyBasicDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type PartyBasicDetailsResponseBodyInner_postCodes record {
    # Identifies the address postal code for the customer or the property
    @constraint:String {maxLength: 35}
    string postCode?;
};

public type CustomerDigitalChannelsResponseBody CustomerDigitalChannelsResponseBodyInner[];

# Represents the Headers record for the operation: updatePartyRelationship
public type UpdatePartyRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: updateCustomerExitStatusParam
public type UpdateCustomerExitStatusParamQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type UnapprovedCustomerGroupResponseBodyInner record {
    # The name that is displayed for the group
    @constraint:String {maxLength: 40}
    string groupName?;
    # Indicates the type of entity that identifies the group eg. Parent or Member
    @constraint:String {maxLength: 25}
    string groupType?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    @constraint:String {maxLength: 9}
    string companyId?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the details of Relationship maintained by the Customer or Entity
    UnapprovedCustomerGroupResponseBodyInner_relationshipDetails[] relationshipDetails?;
    # Contains sub group details such as sub group id, sub group name, sub group customer etc
    UnapprovedCustomerGroupResponseBodyInner_subGroupDetails[] subGroupDetails?;
    # Unique ID of the group
    @constraint:String {maxLength: 35}
    string groupId?;
    # Contains the description of purpose of the payment
    @constraint:String {maxLength: 35}
    string description?;
    # Identifier of customer group purpose
    @constraint:String {maxLength: 15}
    string groupPurposeId?;
};

public type OverdueSettlementsResponseBodyInner record {
    # The nominal quantity
    @constraint:String {maxLength: 19}
    string quantity?;
    # The identifier of the instrument
    @constraint:String {maxLength: 12}
    string instrumentId?;
    # Currency of the account. For example: USD, GBP
    @constraint:String {maxLength: 3}
    string accountCurrency?;
    # Standard date field which records trade date of the account
    string tradeDate?;
    # Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)
    string valueDate?;
    # Specifies the counterparty with whom the trade is to be effected
    OverdueSettlementsResponseBodyInner_broker[] broker?;
    # The trade currency is the settlement currency for the trade
    @constraint:String {maxLength: 3}
    string tradeCurrency?;
    # Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc
    @constraint:String {maxLength: 97}
    string transactionId?;
    # The name that is displayed for the instrument, taken from the security master
    string instrumentName?;
    # Indicates the extension data
    record {} extensions?;
    # Id of the portfolio or security account
    @constraint:String {maxLength: 18}
    string portfolioId?;
    # The quantity outstanding from/to the customer
    @constraint:String {maxLength: 19}
    string customerOutstandingQuantity?;
    # Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person
    @constraint:String {maxLength: 10}
    string depository?;
    # The name that is displayed for the depository
    string depositoryName?;
    # The name that is displayed for the portfolio
    @constraint:String {maxLength: 10}
    string portfolioName?;
    # The amount outstanding from/to the customer
    @constraint:Number {maxValue: 19}
    decimal customerOutstandingAmount?;
};

# Represents the Headers record for the operation: getCustomerExitStatus
public type GetCustomerExitStatusHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerMandates
public type GetCustomerMandatesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createCustomerCharge
public type CreateCustomerChargeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerPersonalDetails
public type GetCustomerPersonalDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Queries record for the operation: createMessages
public type CreateMessagesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerResponseBodyOfficePhoneNumbers record {
    # The office phone number of the customer
    @constraint:String {maxLength: 55}
    string officePhoneNumber?;
};

public type ProspectCustomerBodyProspectLegalDetails record {
    # Unique reference number of the legal documents submitted as identification proof
    @constraint:String {maxLength: 20}
    string legalId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    @constraint:String {maxLength: 35}
    string legalDocumentName?;
};

public type CustomerPersonalDetailsResponseBodyInner_residenceDetails record {
    # Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.
    @constraint:String {maxLength: 35}
    string residenceStatus?;
    # Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments
    @constraint:String {maxLength: 35}
    string residenceType?;
    # Market Value of the customer's residence
    @constraint:Number {maxValue: 19}
    decimal residenceValue?;
    # Mortgage value of the residence property of the customer
    @constraint:Number {maxValue: 19}
    decimal residenceMortgageValue?;
    # The date since the user has obtained the residence.
    string residenceSince?;
};

public type CustomerIdResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Identifier of the customer
    string customerId?;
};

public type AlertRequestsResponseBodyInner_fields record {
    # Contains the name of the display for enrichment purposes
    @constraint:String {maxLength: 50}
    string fieldDisplayName?;
    # This field along with fieldName and value, defines the conditions for the alert to be triggered.
    @constraint:String {maxLength: 35}
    string operand?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
};

public type MessagesBodyMessages record {
    # The actual Transact error message 
    @constraint:String {maxLength: 150}
    string message?;
};

# Represents the Queries record for the operation: getCustomerGroupPurpose
public type GetCustomerGroupPurposeQueries record {
    # Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    string allowGroupRelationship?;
    # Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups
    string groupLevelUniqueCustomer?;
    # Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank
    string groupPurpose?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    string allowRelationship?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Identifier of customer group purpose
    string groupPurposeId?;
    # Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank
    string subGroupLevelUniqueCustomer?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Queries record for the operation: getCustomerId
public type GetCustomerIdQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerResponseBodyLegalDetails record {
    # Date of Issue of the legal document
    string legalIssueDate?;
    # Expiry date of the legal document submitted as proof
    string legalExpiredDate?;
    # Unique reference number of the legal documents submitted as identification proof
    @constraint:String {maxLength: 50}
    string legalId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    @constraint:String {maxLength: 50}
    string legalDocumentName?;
    # Authority who issued the legal document
    @constraint:String {maxLength: 75}
    string legalIssueAuthorisedDate?;
    # Name of the account holder in the Legal Document
    @constraint:String {maxLength: 100}
    string legalHolderName?;
    # Indicates the country where the authorized legal document is issued
    @constraint:String {maxLength: 50}
    string legalIssueCountry?;
};

public type PartyBasicDetailsResponseBodyInner record {
    # The last name of an individual customer
    @constraint:String {maxLength: 50}
    string lastName?;
    # Contains a sub-division identifier of a large organisation or building
    @constraint:String {maxLength: 70}
    string subDepartmentId?;
    # Contains the street name of the customer or the property
    PartyBasicDetailsResponseBodyInner_streets[] streets?;
    # Department identifier
    @constraint:String {maxLength: 70}
    string departmentId?;
    # Contains the email identifier of the customer
    @constraint:String {maxLength: 50}
    string emailId?;
    # The mobile SMS number of the customer
    @constraint:String {maxLength: 17}
    string smsNumber?;
    # Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages
    @constraint:String {maxLength: 35}
    string title?;
    # Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments
    @constraint:String {maxLength: 35}
    string residenceType?;
    # The town and country associated with the address
    PartyBasicDetailsResponseBodyInner_townCountries[] townCountries?;
    # Indicates the customer's country of birth
    @constraint:String {maxLength: 2}
    string birthCountry?;
    # Contains the floor number of the customer address
    @constraint:String {maxLength: 70}
    string floorNumber?;
    # Identifies the building number where customer resides
    @constraint:String {maxLength: 16}
    string buildingNumber?;
    # Represents a subdivision of a country such as state, region, country
    @constraint:String {maxLength: 35}
    string state?;
    # Address output displayed as configured in the address output format in Transact
    @constraint:String {maxLength: 100}
    string unstructuredAddress?;
    # The town and/or city component of the base address of a customer
    @constraint:String {maxLength: 35}
    string addressCity?;
    # Indicates the customer birth province
    @constraint:String {maxLength: 35}
    string birthProvince?;
    # An institution-defined identifier of the type of customer
    @constraint:String {maxLength: 100000}
    string sectorId?;
    # Identifies specific location name with in the country or town
    @constraint:String {maxLength: 35}
    string locationName?;
    # Identifies the country of customer address
    @constraint:String {maxLength: 2}
    string addressCountryId?;
    # The identifier of the nationality of a customer
    @constraint:String {maxLength: 2}
    string nationalityId?;
    # Represents the language code of the underlying Entity/Company/Branch
    @constraint:String {maxLength: 2}
    string languageId?;
    # The date of birth of an individual customer
    @constraint:String {maxLength: 11}
    string dateOfBirth?;
    # Indicates the customer's city of birth
    @constraint:String {maxLength: 35}
    string birthCity?;
    # Contains the party or service which was used for address confirmation purposes
    @constraint:String {maxLength: 35}
    string addressVerifier?;
    # Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)
    @constraint:String {maxLength: 35}
    string addressPurpose?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 100}
    string customerName?;
    # The identifier of the country of residence of a customer
    @constraint:String {maxLength: 2}
    string residenceId?;
    # Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy
    @constraint:String {maxLength: 4}
    string target?;
    # Identifies the name of the building where customer resides
    @constraint:String {maxLength: 35}
    string buildingName?;
    # Indicates the short name of Customer
    @constraint:String {maxLength: 50}
    string customerShortName?;
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 4}
    string accountOfficer?;
    # Indicates the extension data
    record {} extensions?;
    # Identifies the address postal code for the customer or the property
    PartyBasicDetailsResponseBodyInner_postCodes[] postCodes?;
    # Date on which the entity is incorporated
    @constraint:String {maxLength: 11}
    string birthIncorpDate?;
    # Post Office Box (POB) number that relates to financial institution
    @constraint:String {maxLength: 16}
    string postBoxNumber?;
    # Indicates the middle name of the customer or prospect
    @constraint:String {maxLength: 50}
    string middleName?;
    # Contains the alias name or additional surname of the customer
    PartyBasicDetailsResponseBodyInner_nameAliases[] nameAliases?;
    # Contains the greeting to be used for communications with the customer
    @constraint:String {maxLength: 70}
    string salutation?;
    # Identifies the apartment number of the customer address
    @constraint:String {maxLength: 70}
    string apartmentNumber?;
};

# FatcaCustomerResponse
public type FatcaCustomerResponse record {
    ScreenHeader header?;
    FatcaCustomerResponseBody body?;
};

# Represents the Queries record for the operation: getCustomerSweeps
public type GetCustomerSweepsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerSwiftAddress
public type GetCustomerSwiftAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# DirectDebitsResponse
public type DirectDebitsResponse record {
    QueryHeader header?;
    DirectDebitsResponseBody body?;
};

# CustomerSwiftAddressResponse
public type CustomerSwiftAddressResponse record {
    QueryHeader header?;
    CustomerSwiftAddressResponseBody body?;
};

# Represents the Queries record for the operation: getDirectDebits
public type GetDirectDebitsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The unique identifier of the direct debit mandate. 
    string directDebitId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerPrintAddressResponseBodyInner_customerNames record {
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation.
    @constraint:String {maxLength: 70}
    string customerName?;
};

# CustomerRelationshipResponse1
public type CustomerRelationshipResponse1 record {
    QueryHeader header?;
    CustomerRelationshipResponse1Body body?;
};

# ProspectCustomerResponse
public type ProspectCustomerResponse record {
    ScreenHeader header?;
    ProspectCustomerResponseBody body?;
};

public type DeliveryPreferenceBodyMessageGroup record {
    # Contains the starting message id of the conversation
    @constraint:String {maxLength: 35}
    string messageGroupId?;
    DeliveryPreferenceBodyMessageGroupDetail[] messageGroupDetail?;
};

public type ProspectCustomersResponseBodyInner_prospectLegalDetails record {
    # Unique reference number of the legal documents submitted as identification proof
    @constraint:String {maxLength: 20}
    string legalId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    @constraint:String {maxLength: 35}
    string legalDocumentName?;
};

public type CustomerAddressOutputResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    CustomerAddressOutputResponseBodyInner_unstructuredGroup[] unstructuredGroup?;
    CustomerAddressOutputResponseBodyInner_structuredGroup[] structuredGroup?;
    # Identifier of the customer
    @constraint:String {maxLength: 35}
    string customerId?;
};

public type FatcaCustomerBodyCitizenships record {
    # Identifies the citizenship details of Customer
    @constraint:String {maxLength: 9}
    string citizenship?;
};

public type CustomerInformationResponseBodyInner_postingRestrictions record {
    # Identifies any restrictions for posting entries that are imposed on a Customer
    @constraint:String {maxLength: 30}
    string postingRestrictId?;
    # Contains the short name of the posting restrict identifier
    string postingRestrictName?;
};

# Represents the Queries record for the operation: getCustomerExitStatus
public type GetCustomerExitStatusQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# CustomerRequestsResponse
public type CustomerRequestsResponse record {
    QueryHeader header?;
    CustomerRequestsResponseBody body?;
};

# Represents the Headers record for the operation: updateProspectCustomer
public type UpdateProspectCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createCustomer
public type CreateCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# OverdueSettlementsResponse
public type OverdueSettlementsResponse record {
    QueryHeader header?;
    OverdueSettlementsResponseBody body?;
};

public type CustomerProfileResponseBodyNameAliases record {
    # Contains the alias name or additional surname of the customer
    @constraint:String {maxLength: 35}
    string nameAlias?;
};

# Represents the Headers record for the operation: getPartyRelationship
public type GetPartyRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: approveCustomerGroupPurpose
public type ApproveCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getUnapprovedCustomerGroup
public type GetUnapprovedCustomerGroupHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createPartyRelationship
public type CreatePartyRelationshipQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerRelationshipsResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    CustomerRelationshipsResponseBodyRelations[] relations?;
};

public type CustomerInformationResponseBodyInner_addresses record {
    # Contains the street name of the customer or the property
    @constraint:String {maxLength: 35}
    string street?;
    # Contains the communication address of the customer or full address of the property
    @constraint:String {maxLength: 35}
    string address?;
    # The town and/or city component of the base address of a customer
    @constraint:String {maxLength: 35}
    string addressCity?;
    # Identifies the address postal code for the customer or the property
    @constraint:String {maxLength: 35}
    string postCode?;
    # Identifies the country of the customer or a property or organization
    @constraint:String {maxLength: 35}
    string country?;
};

public type UnapprovedCustomerGroupPurposeResponseBody UnapprovedCustomerGroupPurposeResponseBodyInner[];

# CustomerGroupsResponse
public type CustomerGroupsResponse record {
    QueryHeader header?;
    CustomerGroupsResponseBody body?;
};

# Represents the Queries record for the operation: getBicOwners
public type GetBicOwnersQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# DeliveryPreferenceResponse
public type DeliveryPreferenceResponse record {
    ScreenHeader header?;
    DeliveryPreferenceResponseBody body?;
};

# CustomerKYCDetailsResponse
public type CustomerKYCDetailsResponse record {
    QueryHeader header?;
    CustomerKYCDetailsResponseBody body?;
};

# CustomerEmailAddressResponse1
public type CustomerEmailAddressResponse1 record {
    ScreenHeader header?;
    CustomerEmailAddressResponse1Body body?;
};

public type CustomerGroupPurposeBodyGroupRelationships record {
    # Indicates the list of allowed group relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedGroupRelationship?;
};

public type AlertRequestsResponseBody AlertRequestsResponseBodyInner[];

# Represents the Queries record for the operation: getUnapprovedCustomerGroup
public type GetUnapprovedCustomerGroupQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerShortNamesResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 70}
    string customerName?;
};

public type CustomerResponseBodyRoleDetails record {
    # This is used to specify what delivery addressing is to be used for the link customer. 
    @constraint:String {maxLength: 55}
    string jointRelationDeliveryOption?;
    # Additional notes about the role
    @constraint:String {maxLength: 55}
    string jointRelationRoleNote?;
    # Role of joint customer with the main customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal jointRelationRoleId?;
};

public type CustomerInformationResponseBodyInner_profileTypes record {
    # Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.
    @constraint:String {maxLength: 35}
    string profileType?;
    # Specifies the description of the profile Type.
    @constraint:String {maxLength: 35}
    string profileTypeName?;
    # Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.
    @constraint:String {maxLength: 35}
    string profile?;
    # Specifies the description of the profile.
    @constraint:String {maxLength: 35}
    string profileName?;
};

# Represents the Queries record for the operation: getCustomerGroups
public type GetCustomerGroupsQueries record {
    # Unique ID of the group
    string groupId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerConsentsResponseBodyInner record {
    # Indicates an unique identifier of an account
    string arrangementId?;
    # This indicates the  date  on which the offer or privilege terminates for the event
    string expiryDate?;
    # Indicates the extension data
    record {} extensions?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    string productId?;
    # Consent Type for which the consent is given
    CustomerConsentsResponseBodyInner_consentTypes[] consentTypes?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

# Represents the Queries record for the operation: updateProspectCustomer
public type UpdateProspectCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: getCustomerRelationship
public type GetCustomerRelationshipQueries record {
    # Identifies the key to Customer Relationship Group to form a relation
    string customerRelationGroupId?;
    # Identifier of the Related Party
    string relatedPartyId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Identifier of the Customer Relationship and Party Relationship
    string relationId?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    string partyId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerAddressOutputResponseBodyInner_unstructuredGroup record {
    # Address output displayed as configured in the address output format in Transact
    string unstructuredAddress?;
};

public type OtherBanksToConnectToResponseBodyInner_paymentTemplates record {
    # Contains the template used for payment transactions
    @constraint:String {maxLength: 35}
    string paymentTemplate?;
};

# Represents the Queries record for the operation: updateDeliveryPreference
public type UpdateDeliveryPreferenceQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: getCustomerCreditCards
public type GetCustomerCreditCardsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerResponseBodyOtherNationalityIds record {
    # Other Nationality of the Customer
    @constraint:String {maxLength: 50}
    string otherNationalityId?;
};

public type CustomerSweepsResponseBodyInner_toAccountDetails record {
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Display name or short name of the account specified.
    string accountName?;
    # Currency of the account. For example: USD, GBP.
    string accountCurrency?;
    # The minimum account balance required
    string minimumBalance?;
    # The maximum account balance allowed
    string maximumBalance?;
};

public type CustomerSweepsResponseBodyInner_fromAccountDetails record {
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Display name or short name of the account specified.
    string accountName?;
    # Currency of the account. For example: USD, GBP.
    string accountCurrency?;
};

# Represents the Headers record for the operation: createPartyRelationship
public type CreatePartyRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerOpportunitiesResponseBody CustomerOpportunitiesResponseBodyInner[];

# Represents the Headers record for the operation: getCustomerOpportunities
public type GetCustomerOpportunitiesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type DirectDebitsResponseBody DirectDebitsResponseBodyInner[];

# CustomerPostingRestrictionsResponse
public type CustomerPostingRestrictionsResponse record {
    QueryHeader header?;
    CustomerPostingRestrictionsResponseBody body?;
};

public type ProspectCustomerBodyTownCountries record {
    # The town and country associated with the address
    @constraint:String {maxLength: 35}
    string townCountry?;
};

# CustomerDeliveryOptionsResponse
public type CustomerDeliveryOptionsResponse record {
    QueryHeader header?;
    CustomerDeliveryOptionsResponseBody body?;
};

public type UnapprovedCustomerGroupPurposeResponseBodyInner_groupTypes record {
    # Indicates the type of entity that identifies the group eg. Parent or Member
    @constraint:String {maxLength: 35}
    string groupType?;
    # Details about the Customer Relationships and Party Relationships
    UnapprovedCustomerGroupPurposeResponseBodyInner_relationships[] relationships?;
    UnapprovedCustomerGroupPurposeResponseBodyInner_groupRelationships[] groupRelationships?;
    UnapprovedCustomerGroupPurposeResponseBodyInner_aggregateRelationships[] aggregateRelationships?;
};

public type PartyBasicDetailsResponseBodyInner_townCountries record {
    # The town and country associated with the address
    @constraint:String {maxLength: 35}
    string townCountry?;
};

public type CustomerPrintAddressBodyPostCodes record {
    # Identifies the address postal code for the customer or the property
    @constraint:String {maxLength: 35}
    string postCode?;
};

# PartyRelationshipResponse
public type PartyRelationshipResponse record {
    ScreenHeader header?;
    PartyRelationshipResponseBody body?;
};

public type CustomerInformationResponseBodyInner_addressLocations record {
    # Identifies the nature of the postal address, like primary, secondary or office address
    @constraint:String {maxLength: 30}
    string addressLocation?;
};

public type PartyRelationshipResponse1BodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Specifies the short name of the customer in CUSTOMER.GROUP
    @constraint:String {maxLength: 35}
    string partyName?;
    # Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY
    PartyRelationshipResponse1BodyInner_relatedParties[] relatedParties?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 35}
    string partyId?;
    # Contains the identifier used for the role played by the party or customer in the contract or account
    PartyRelationshipResponse1BodyInner_relatedPartyRoles[] partyRoles?;
};

# CustomerPhoneAddressResponse1
public type CustomerPhoneAddressResponse1 record {
    ScreenHeader header?;
    CustomerPhoneAddressResponse1Body body?;
};

public type CustomerPrintAddressBodyTowns record {
    # Contains the town associated with the address of the customer or property
    @constraint:String {maxLength: 35}
    string town?;
};

public type CustomerConsentsResponseBodyInner_subTypes record {
    # Indicates the consent sub type linked to corresponding consent type.
    string consentSubType?;
    # Contains the sub type of consent given to the customer
    string consentSubTypeGiven?;
};

# Represents the Headers record for the operation: updateCustomerGroupPurpose
public type UpdateCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerProfileResponseBodySpokenLanguages record {
    # Customers native language or the language that can be used for communication
    @constraint:String {maxLength: 30}
    string spokenLanguage?;
};

public type CustomerPrintAddressResponseBodyInner_towns record {
    # Contains the town associated with the address of the customer or property
    @constraint:String {maxLength: 35}
    string town?;
};

public type CustomerGroupPurposeBodyRelationships record {
    # Indicates the list of allowed real relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedRelationship?;
};

public type CustomerRelationshipBodyRelationships record {
    # Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership
    @constraint:String {maxLength: 6}
    string owningPercent?;
    # The relation between the originating party and the related party.For Example:Mother, Daughter
    @constraint:String {maxLength: 3}
    string relatedPartyRelation?;
    # To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY
    @constraint:String {maxLength: 20}
    string relatedPartyRole?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 10}
    string relatedPartyId?;
    # To state the effective date of the relationship
    string relatedPartyEffectiveDate?;
    # To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute
    @constraint:String {maxLength: 35}
    string relatedRelationReference?;
    # Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY
    @constraint:String {maxLength: 35}
    string relatedParty?;
};

# Represents the Headers record for the operation: getCustomerGroups
public type GetCustomerGroupsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerPrintAddressResponseBodyInner_customerShortNames record {
    # Indicates the short name of Customer
    string customerShortName?;
};

public type PartyRelationshipResponse1BodyInner_relatedParties record {
    # Identifies the hierarchy in the relationship. It is applicable primarily for relationship between Corporate Entities – Parent, Child or Other
    @constraint:String {maxLength: 35}
    string relationshipHierarchyType?;
    # Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of.
    @constraint:Number {maxValue: 35}
    decimal relationshipType?;
    # Indicates the description of the relationship between parties
    @constraint:String {maxLength: 35}
    string relationshipName?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 35}
    string relatedPartyId?;
    # Name of the Party related to the Customer
    @constraint:String {maxLength: 35}
    string relatedPartyName?;
    # Contains the percentage contributed by specific owner of the asset or collateral
    @constraint:Number {maxValue: 6}
    decimal ownershipPercentage?;
    # Specifies the date the relationship started.
    string relationshipEffectiveDate?;
    # Specifies the date the relationship ended.
    string relationshipEndDate?;
    # To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY
    PartyRelationshipResponse1BodyInner_relatedPartyRoles[] relatedPartyRoles?;
};

# Represents the Queries record for the operation: createCustomerGroupPurpose
public type CreateCustomerGroupPurposeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: getCustomerRelationship
public type GetCustomerRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerResponseBodyAddresses record {
    # Contains the communication address of the customer or full address of the property
    @constraint:String {maxLength: 55}
    string address?;
};

# Represents the Queries record for the operation: createFatcaCustomer
public type CreateFatcaCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ProspectCustomerBodyEmails record {
    # Email Identifier of the Customer
    @constraint:String {maxLength: 50}
    string email?;
};

public type CustomerPrintAddressResponseBody CustomerPrintAddressResponseBodyInner[];

# Represents the Queries record for the operation: updateCustomerEmailAddress
public type UpdateCustomerEmailAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type UnapprovedCustomerGroupResponseBodyInner_subGroupDetails record {
    # Unique ID of the group
    @constraint:String {maxLength: 15}
    string groupId?;
    # The name that is displayed for the group
    @constraint:String {maxLength: 35}
    string groupName?;
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.
    @constraint:String {maxLength: 9}
    string companyId?;
    # Identifier of Department Account Officer
    @constraint:String {maxLength: 6}
    string accountOfficer?;
    # Indicates the identifier for party details in which party id and party owner are defined
    UnapprovedCustomerGroupResponseBodyInner_partyDetails[] partyDetails?;
};

public type CustomerKYCDetailsResponseBody CustomerKYCDetailsResponseBodyInner[];

public type StandingOrdersResponseBody StandingOrdersResponseBodyInner[];

public type CustomerDigitalChannelsResponseBodyInner_digitalChannels record {
    # Name of the (digital) channel registered by the Customer
    @constraint:String {maxLength: 20}
    string channelName?;
    # Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.
    @constraint:String {maxLength: 35}
    string status?;
    # The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.
    @constraint:String {maxLength: 35}
    string productLine?;
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 35}
    string arrangementId?;
    # Contains the date on which the transaction or payment gets initiated.
    string startDate?;
    # Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned
    string endDate?;
    # The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL
    @constraint:String {maxLength: 12}
    string userType?;
    # The type of login method e.g. password, PIN, OTP
    @constraint:String {maxLength: 20}
    string loginMethod?;
    # Last date and time the user last logged in.
    string lastSignOnDate?;
};

public type ProspectCustomerResponseBody record {
    # Contains a sub-division identifier of a large organisation or building
    @constraint:String {maxLength: 70}
    string subDepartmentId?;
    # Contains the communication address of the customer or full address of the property
    CustomerResponseBodyAddresses[] addresses?;
    # Identifies specific location name with in the country or town
    @constraint:String {maxLength: 55}
    string locationName?;
    # Contains the street name of the customer or the property
    CustomerResponseBodyStreets[] streets?;
    # Stores the district name of the  Beneficiary Customer
    @constraint:String {maxLength: 55}
    string districtName?;
    # Gender of the Individual Customer
    @constraint:String {maxLength: 55}
    string gender?;
    # Department identifier
    @constraint:String {maxLength: 70}
    string departmentId?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    ProspectCustomerBodyCustomerNames[] customerNames?;
    # Identifies the country of the customer or a property or organization
    CustomerResponseBodyCountries[] countries?;
    # Identify which country an entity has been registered
    @constraint:String {maxLength: 50}
    string registeredCountry?;
    # The phone number of the customer or prospect
    ProspectCustomerBodyPhoneNumbers[] phoneNumbers?;
    # Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity
    @constraint:String {maxLength: 55}
    string personEntity?;
    # Email Identifier of the Customer
    ProspectCustomerBodyEmails[] emails?;
    # Social Network Identification of the person/entity
    ProspectCustomerBodySocialNetworkIds[] socialNetworkIds?;
    # Identifies the legal entity details of prospect customer
    ProspectCustomerBodyProspectLegalDetails[] prospectLegalDetails?;
    # Indicates the extensions
    record {} extensions?;
    # Identifies the address postal code for the customer or the property
    ProspectCustomerBodyPostCodes[] postCodes?;
    # Date on which the entity is incorporated
    string birthIncorpDate?;
    # The town and country associated with the address
    ProspectCustomerBodyTownCountries[] townCountries?;
    # Contains the floor number of the customer address
    @constraint:String {maxLength: 70}
    string floorNumber?;
};

public type CustomerRelationshipResponse1Body CustomerRelationshipResponse1BodyInner[];

public type CustomerRelationshipResponse1BodyInner_relationships record {
    # To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute
    @constraint:String {maxLength: 35}
    string relatedRelationReference?;
    # Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY
    @constraint:String {maxLength: 35}
    string relatedParty?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 10}
    string relatedPartyId?;
    # The relation between the originating party and the related party.For Example:Mother, Daughter
    @constraint:String {maxLength: 3}
    string relatedPartyRelation?;
    # To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY
    @constraint:String {maxLength: 20}
    string relatedPartyRole?;
    # To state the effective date of the relationship.
    string relatedPartyEffectiveDate?;
    # Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership
    @constraint:String {maxLength: 6}
    string owningPercent?;
};

public type PartyBasicDetailsResponseBodyInner_streets record {
    # Contains the street name of the customer or the property
    @constraint:String {maxLength: 70}
    string street?;
};

public type CustomerInformationResponseBodyInner_phoneNumbers record {
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 47}
    string phoneNumber?;
};

public type MessagesResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    # The subject of the message to be sent or received
    @constraint:String {maxLength: 150}
    string subject?;
    # Specifies the record ID of parent message. 
    MessagesBodyMessages[] messages?;
    # The unique customer identifier of the Payee, to whom the payment message is to be sent
    @constraint:String {maxLength: 10}
    string toCustomerId?;
};

# Represents the Queries record for the operation: deleteCustomerPhoneAddress
public type DeleteCustomerPhoneAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string apikey;
|};

# CustomerSweepsResponse
public type CustomerSweepsResponse record {
    QueryHeader header?;
    CustomerSweepsResponseBody body?;
};

public type CustomerRequestsResponseBodyInner record {
    # Indicates the display name of the activity
    @constraint:String {maxLength: 35}
    string activityDisplayName?;
    # Indicates the extension data
    record {} extensions?;
    # Business Activity Status  POSSIBLE VALUES: 0: Ready  1: Running  2: Completed successfully  3: On hold or in error
    @constraint:String {maxLength: 35}
    string activityStatus?;
    # Indicates the display name of the current initiated process
    @constraint:String {maxLength: 35}
    string processDisplayName?;
};

public type DeliveryPreferenceBodyOtherMessagesDetail record {
    # Indicates the Role of the Customer
    @constraint:String {maxLength: 35}
    string role?;
    # Identifies the position of the carrier in the arrangement
    @constraint:String {maxLength: 3}
    string carrierPosition?;
    # Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned
    @constraint:String {maxLength: 11}
    string endDate?;
    # Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y
    @constraint:String {maxLength: 35}
    string holdOutput?;
    # Indicates the formatting version to be used for the delivery message
    @constraint:String {maxLength: 2}
    string format?;
    # Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing
    @constraint:String {maxLength: 35}
    string holdMailOption?;
    # The language that the contents of the field are displayed in
    @constraint:String {maxLength: 2}
    string language?;
    # Defines the start date of the hold period when the delivery message is to be held in the system
    @constraint:String {maxLength: 11}
    string holdMailStartDate?;
    # Flag to set the channel to communicate
    @constraint:String {maxLength: 35}
    string required?;
    # Carrier to be used for processing the messages
    @constraint:String {maxLength: 10}
    string carrier?;
    # Specifies the number of copies of a message required
    @constraint:String {maxLength: 2}
    string copies?;
    # Defines the end date of the hold period when the delivery message is to be held in the system
    @constraint:String {maxLength: 11}
    string holdMailEndDate?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 11}
    string startDate?;
};

public type CustomerIdResponseBody CustomerIdResponseBodyInner[];

# Represents the Queries record for the operation: updateCustomerGroupPurpose
public type UpdateCustomerGroupPurposeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# UnapprovedCustomerGroupResponse
public type UnapprovedCustomerGroupResponse record {
    QueryHeader header?;
    UnapprovedCustomerGroupResponseBody body?;
};

# CustomerInformationResponse
public type CustomerInformationResponse record {
    QueryHeader header?;
    CustomerInformationResponseBody body?;
};

public type CustomerPostingRestrictionsResponseBodyInner_postingRestricts record {
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation.
    @constraint:String {maxLength: 35}
    string customerName?;
    # Identifies any restrictions for posting entries that are imposed on a Customer
    @constraint:String {maxLength: 2}
    string postingRestrictId?;
    # Display name of Posting Restriction, if any, applicable for the customer
    @constraint:String {maxLength: 2}
    string postingRestrictDisplayName?;
};

public type PartyRelationshipResponse1BodyInner_relatedPartyRoles record {
    # Indicates the role of the party in relation to the bank – Customer, Associated Party, Representative.
    @constraint:String {maxLength: 35}
    string partyRoleType?;
    # Indicates the status for the party role – Active, Inactive or Prospect.
    @constraint:String {maxLength: 35}
    string partyRoleStatus?;
};

# Represents the Queries record for the operation: createCustomerEmailAddress
public type CreateCustomerEmailAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BicOwnersResponseBodyInner_bicdetails record {
    # The identifier of the underlying Entity/Company/Branch.
    @constraint:String {maxLength: 9}
    string companyCode?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.
    @constraint:String {maxLength: 10}
    string customer?;
    # Carrier to be used for processing the messages
    @constraint:String {maxLength: 10}
    string carrier?;
};

public type ProspectCustomersResponseBodyInner_countryNames record {
    # This is the country name that the financial institution resides in.
    @constraint:String {maxLength: 35}
    string countryName?;
};

public type OverdueSettlementsResponseBody OverdueSettlementsResponseBodyInner[];

public type CustomerInformationResponseBodyInner_vulnerabilities record {
    # The type of vulnerability (physical impairment) the customer had.
    @constraint:String {maxLength: 45}
    string vulnerability?;
};

public type CustomerPostingRestrictionsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # Identifier of the Posting Restricts imposed on a customer or account
    CustomerPostingRestrictionsResponseBodyInner_postingRestricts[] postingRestricts?;
};

public type CustomerProfileResponseBodyCitizenships record {
    # Specifies the country name of the beneficiary customer
    @constraint:String {maxLength: 9}
    string customerCountry?;
};

public type CustomerSwiftAddressResponseBodyInner record {
    # Indicates the short name of Customer
    @constraint:String {maxLength: 50}
    string customerShortName?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates that BIC Code to be included in the Tag25 or not
    @constraint:String {maxLength: 3}
    string swiftTag25Indicator?;
    # Indicates that client name is not used in SWIFT Address for confidential purposes
    @constraint:String {maxLength: 3}
    string confidentialityText?;
    # The BIC code of the Beneficiary bank
    @jsondata:Name {value: "BIC"}
    string bIC?;
};

# Represents the Queries record for the operation: updateFatcaCustomer
public type UpdateFatcaCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerGroupsResponseBodyInner_primaryPartyDetails record {
    # Indicates the type of primary customer which is part of the aggregate relationship. It may be Customer, Person or Entity
    @constraint:String {maxLength: 8}
    string primaryPartyType?;
    # Identifier of the customer defined as the primary party in an aggregate relationship.
    @constraint:String {maxLength: 10}
    string primaryPartyId?;
};

# Represents the Headers record for the operation: getCustomerShortNames
public type GetCustomerShortNamesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerDigitalChannels
public type GetCustomerDigitalChannelsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createCustomerClosure
public type CreateCustomerClosureQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerClosureResponse1BodyInner record {
    # Identifier of customer closure request
    @constraint:String {maxLength: 35}
    string customerClosureId?;
    # The field reflects the customer exit reason of the customer or prospect
    @constraint:String {maxLength: 80}
    string exitReason?;
    # Indicates if the customer who had exited the relationship with the bank is reopened
    @constraint:String {maxLength: 11}
    string reopenedDate?;
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # The field reflects the customer exit status of a customer or prospect
    @constraint:String {maxLength: 35}
    string exitStatus?;
    # General comments / notes
    @constraint:String {maxLength: 35}
    string remarks?;
    # The current status of the request. The possible values includes New, send to printer, cancelled and processed
    @constraint:String {maxLength: 35}
    string requestStatus?;
    # The field reflects the customer exit date of the customer or prospect
    @constraint:String {maxLength: 11}
    string exitDate?;
};

public type CustomerPersonalDetailsResponseBodyInner_Addresses record {
    # The address of the customer's employer.
    @constraint:String {maxLength: 35}
    string employerAddress?;
};

public type CustomerResponseBody record {
    # Specifies an alternative easy means of referencing the Customer
    @constraint:String {maxLength: 200}
    string customerMnemonic?;
    # Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process
    @constraint:String {maxLength: 50}
    string manualRiskClass?;
    # Contains the communication address of the customer or full address of the property
    CustomerResponseBodyAddresses[] addresses?;
    # Specifies the number of dependents to the customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal numberOfDependents?;
    # Contains the street name of the customer or the property
    CustomerResponseBodyStreets[] streets?;
    # Name of the person who introduced the Customer to the bank
    @constraint:String {maxLength: 55}
    string introducer?;
    # Date that first contact was made with the Customer
    string contactDate?;
    # Reason for changing the customer's risk class from the calculated risk class
    @constraint:String {maxLength: 35}
    string overrideReason?;
    # The language that the contents of the field are displayed in
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal language?;
    # Indicates the communication details of the customer like PhoneNumber, email
    CustomerResponseBodyCommunicationDevices[] communicationDevices?;
    # Date customer KYC information was last reviewed
    string kycLastReviewDate?;
    # Holds the Customer's TAX/SSN Id
    CustomerResponseBodyTaxIds[] taxIds?;
    # An institution-defined identifier of the industry in which the customer is trading, operating or is associated with
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal industryId?;
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    @constraint:String {maxLength: 35}
    string customerType?;
    # The identifier of the department head or specific account officer responsible for the customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal accountOfficerId?;
    # Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company
    @constraint:String {maxLength: 11}
    string customerCompany?;
    # If 'Yes', then the customer will receive a SECURE message
    @constraint:String {maxLength: 3}
    string isSecureMessage?;
    # An institution-defined identifier of the type of customer
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal sectorId?;
    # Indicates the customer consolidation number for credit grouping purposes, within the same branch/country
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal customerLiability?;
    # The town and/or city component of the base address of a customer
    CustomerResponseBodyAddressCities[] addressCities?;
    # The identifier of the nationality of a customer
    @constraint:String {maxLength: 50}
    string nationalityId?;
    # Customer's given name
    @constraint:String {maxLength: 50}
    string givenName?;
    # The last date when Anti Money Laundering result is performed and updated
    @constraint:String {maxLength: 11}
    string amlLastResultDate?;
    # Identifies the country of the customer or a property or organization
    CustomerResponseBodyCountries[] countries?;
    # Date system has calculated customer should next be reviewed
    string kycNextSystemReviewDate?;
    # Indicates the residence details of Customer or entity like type, status, value
    CustomerResponseBodyResidenceDetails[] residenceDetails?;
    # Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values
    @constraint:String {maxLength: 4}
    string amlCheck?;
    # The identifier of the country of residence of a customer
    @constraint:String {maxLength: 2}
    string residenceId?;
    # Other Nationality of the Customer
    CustomerResponseBodyOtherNationalityIds[] otherNationalityIds?;
    # Identifies any restrictions for posting entries that are imposed on a Customer
    CustomerResponseBodyPostingRestrictIds[] postingRestrictIds?;
    # Indicates the extensions
    record {} extensions?;
    # Next date of KYC review defined manually by the User
    string kycNextReviewDate?;
    # Identifies the address postal code for the customer or the property
    @constraint:Number {minValue: 0, maxValue: 10000}
    decimal postCode?;
    # Marital status of the customer
    @constraint:String {maxLength: 35}
    string maritalStatus?;
    # The last name of an individual customer
    @constraint:String {maxLength: 50}
    string lastName?;
    # Gender of the Individual Customer
    @constraint:String {maxLength: 35}
    string gender?;
    # The death date of customer
    @constraint:String {maxLength: 55}
    string dateOfDeath?;
    # The fax (facsimile) number of the customer
    CustomerResponseBodyFaxIds[] faxIds?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    CustomerResponseBodyCustomerNames[] customerNames?;
    # Indicates the residence region of country used for capital gains tax purposes
    @constraint:String {maxLength: 55}
    string taxResidenceRegion?;
    # Specifies the additional officers who can assist with a product/arrangement
    CustomerResponseBodyOtherOfficers[] otherOfficers?;
    # Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages
    @constraint:String {maxLength: 35}
    string title?;
    # The internal bank status of a customer
    @constraint:Number {minValue: 0, maxValue: 10000}
    decimal customerStatus?;
    # The office phone number of the customer
    CustomerResponseBodyOfficePhoneNumbers[] officePhoneNumbers?;
    # Whether information related to the customer has been collected and verified
    boolean isKycComplete?;
    # Describe the results of Anti Money Laundering
    @constraint:String {maxLength: 55}
    string amlResult?;
    # Indicates the employment details of Customer like Status, title, occupation
    CustomerResponseBodyEmployDetails[] employDetails?;
    # Contains the name used for display or enrichment purposes
    CustomerResponseBodyDisplayNames[] displayNames?;
    # Indicates the Customer Relationship details of the customer
    @constraint:String {maxLength: 55}
    string kycRelationship?;
    # The date of birth of an individual customer
    string dateOfBirth?;
    # Contains the contact details of the customer
    CustomerResponseBodyContactDetails[] contactDetails?;
    # Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy
    @constraint:Number {minValue: 0, maxValue: 100000}
    decimal target?;
    # Indicates the details of Relationship maintained by the Customer or Entity
    CustomerResponseBodyRelationshipDetails[] relationshipDetails?;
    # Date on which the entity is incorporated
    string birthIncorpDate?;
    # Indicates country of domicile
    @constraint:String {maxLength: 55}
    string domicile?;
    # Indicates the legal document details of the Customer
    CustomerResponseBodyLegalDetails[] legalDetails?;
};

public type ProspectCustomerBodyPostCodes record {
    # Identifies the address postal code for the customer or the property
    @constraint:String {maxLength: 60}
    string postCode?;
};

public type CustomerRelationshipResponseBody record {
    # Details about the Customer Relationships and Party Relationships
    CustomerRelationshipBodyOriginatingRelation[] originatingRelation?;
    # Identifies the key to Customer Relationship Group to form a relation
    @constraint:Number {minValue: 0, maxValue: 15}
    decimal customerRelationGroupId?;
    # Indicates the extensions
    record {} extensions?;
    # The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank
    @constraint:String {maxLength: 35}
    string purposeOfRelationship?;
    # Name of a Customer Relationship Group if applicable to the relationship
    @constraint:String {maxLength: 40}
    string customerRelationGroupName?;
};

public type CustomerDeliveryOptionsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    CustomerDeliveryOptionsResponseBodyInner_deliveryPreferences[] deliveryPreferences?;
    # Identifier of the customer
    @constraint:Number {maxValue: 35}
    decimal customerId?;
};

# Represents the Headers record for the operation: updateCustomerExitStatus
public type UpdateCustomerExitStatusHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerMandatesResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    # Holds the Mandate details such as apllication and mandate rules to be followed for transactions done using that specific application
    CustomerMandatesResponseBodyMandateDetails[] mandateDetails?;
};

# Represents the Headers record for the operation: createCustomerEmailAddress
public type CreateCustomerEmailAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ProspectCustomerBodyPhoneNumbers record {
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 17}
    string phoneNumber?;
};

public type FatcaCustomerResponseBody record {
    FatcaCustomerBodyTinDetails[] tinDetails?;
    # User who defines the Campaign
    @jsondata:Name {value: "Owner"}
    FatcaCustomerBodyOwner[] owner?;
    # Specifies the date on which the current status got expired
    string currentStatusExpiry?;
    # Specifies the reason (if any) for any status change
    @constraint:String {maxLength: 35}
    string changeReason?;
    # Specifies whether there is power of attorney(POA) to a person with US Address. Possible values YES/NO
    @constraint:String {maxLength: 50}
    string isPoa?;
    # Identifies the citizenship details of customer. If blank it defaults to US
    @constraint:String {maxLength: 50}
    string isPlaceOfBirthUs?;
    # Identifies the Social Security number of the customer
    @constraint:String {maxLength: 35}
    string socialSecurityNumber?;
    # Identifies the type of client.E.g Individual, Entity etc
    @constraint:String {maxLength: 35}
    string fatcaClientType?;
    # The identifier of the country of residence of a customer
    @constraint:String {maxLength: 55}
    string residenceId?;
    # Identifies the effective date of change of status
    string statusChangeDate?;
    # Specifies the Fatca status or Account Classification of the client. 
    @constraint:String {maxLength: 35}
    string fatcaStatus?;
    # Indicates the extensions
    record {} extensions?;
    # Specifies whether there is any standing instruction to an account in US. Possible values YES/NO
    @constraint:String {maxLength: 55}
    string standingInstructionOnUsAccount?;
    # The phone number of the customer or prospect
    @constraint:String {maxLength: 55}
    string phoneNumber?;
    # Specifies the self-classification received from entities 
    @constraint:String {maxLength: 35}
    string entityStatus?;
    # Identifies the citizenship details of Customer
    FatcaCustomerBodyCitizenships[] citizenships?;
    # Specifies the Global Intermediary Identification Numbers of financial institutions
    @constraint:String {maxLength: 35}
    string giin?;
    # Indicates country of domicile
    @constraint:String {maxLength: 55}
    string domicile?;
    # Specifies if account has any instructions from a US address. Possible values YES or NO
    @constraint:String {maxLength: 55}
    string accountInstructionfromUs?;
    # Indicates if customer is a joint owner
    @jsondata:Name {value: "JointOwner"}
    FatcaCustomerBodyJointOwner[] jointOwner?;
    # Identifies the greencard details of the client
    @constraint:String {maxLength: 35}
    string greencardDetails?;
    # Identifies if the KYC check has been done or not. Possible values YES or NO
    @constraint:String {maxLength: 55}
    string isKycChecked?;
    # Specifies whether there is no contact that could be established with the client. Possible values YES or NO
    @constraint:String {maxLength: 55}
    string isDormantAccount?;
    # Identifies any free format narrative related to FATCA status
    @constraint:String {maxLength: 35}
    string statusNarrative?;
};

# Represents the Queries record for the operation: updatePartyRelationship
public type UpdatePartyRelationshipQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: getCustomerCreditCards
public type GetCustomerCreditCardsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getOverdueSettlements
public type GetOverdueSettlementsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerGroupsResponseBodyInner_relationshipDetails record {
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY.
    @constraint:String {maxLength: 13}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.
    @constraint:String {maxLength: 10}
    string partyId?;
    # Indicates the nature of the relationship between the two parties Parent-of, Subsidiary-of.
    @constraint:String {maxLength: 3}
    string relationshipType?;
    # Indicates the description of the relationship between parties
    @constraint:String {maxLength: 13}
    string relationshipName?;
    # Indicates the nature of the relationship between the two group of parties.
    @constraint:String {maxLength: 3}
    string groupRelationshipType?;
    # Indicates the related party's customer type. It may be Customer, Person or Entity.
    @constraint:String {maxLength: 13}
    string relatedPartyType?;
    # Identifier of the Related Party
    @constraint:String {maxLength: 10}
    string relatedPartyId?;
    # Contains the percentage contributed by specific owner of the asset or collateral
    @constraint:String {maxLength: 6}
    string ownershipPercentage?;
    # Contains the date on which the transaction or payment gets initiated.
    @constraint:String {maxLength: 11}
    string startDate?;
    # Indicates whether the party can be excluded from the customer group. Allowed values are YES or Blank
    @constraint:String {maxLength: 3}
    string excludeParty?;
};

public type CustomerRequestsResponseBody CustomerRequestsResponseBodyInner[];

# CustomerLegalDocumentsResponse
public type CustomerLegalDocumentsResponse record {
    ScreenHeader header?;
    CustomerLegalDocumentsResponseBody body?;
};

# CustomerPhoneAddressResponse
public type CustomerPhoneAddressResponse record {
    QueryHeader header?;
    CustomerPhoneAddressResponseBody body?;
};

public type CustomerProfileResponseBodyCustomerNames record {
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 70}
    string customerName?;
};

public type UnapprovedCustomerGroupResponseBodyInner_partyDetails record {
    # Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY.
    @constraint:String {maxLength: 13}
    string partyType?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.
    @constraint:String {maxLength: 10}
    string partyId?;
};

# Represents the Headers record for the operation: createCustomerRelationship
public type CreateCustomerRelationshipHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ProspectCustomersResponseBodyInner_streets record {
    # Contains the street name of the customer or the property
    @constraint:String {maxLength: 35}
    string street?;
};

public type JointCustomerDetailsResponseBodyInner_jointCustomerDetails record {
    # The identifier of the relationship between joint holder and owner 
    @constraint:Number {maxValue: 3}
    decimal jointRelationCode?;
    # Display name of Joint Relationship identifier
    @constraint:String {maxLength: 3}
    string jointRelationDisplayName?;
    # Joint or related customer id
    @constraint:Number {maxValue: 10}
    decimal jointCustomer?;
    # Name of Joint Customer
    @constraint:String {maxLength: 10}
    string jointCustomerName?;
    # Relationship code for the Related Customer
    @constraint:Number {maxValue: 3}
    decimal reverseJointRelationCode?;
    # Describes the Relation code and is used for the enrichment of the code for reverse joint relation.
    @constraint:String {maxLength: 3}
    string reverseJointRelationName?;
    # Identifies the delivery options available to the customer
    JointCustomerDetailsResponseBodyInner_deliveryOption[] deliveryOption?;
};

# Represents the Headers record for the operation: getBicOwners
public type GetBicOwnersHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerExitStatusResponse1
public type CustomerExitStatusResponse1 record {
    ScreenHeader header?;
    CustomerExitStatusResponse1Body body?;
};

# Represents the Queries record for the operation: deleteCustomerPrintAddress
public type DeleteCustomerPrintAddressQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerInformationResponseBodyInner_legalDocuments record {
    # Unique reference number of the legal documents submitted as identification proof
    @constraint:String {maxLength: 45}
    string legalId?;
    # Name of the legal documents such as passport, driving licence etc., provided as identification proof
    @constraint:String {maxLength: 45}
    string legalDocumentName?;
    # Name of the account holder in the Legal Document
    @constraint:String {maxLength: 100}
    string legalHolderName?;
    # Authority who issued the legal document
    string legalIssueAuthorisedDate?;
    # Date of Issue of the legal document
    string legalIssueDate?;
    # Expiry date of the legal document submitted as proof
    string legalExpiredDate?;
};

public type CustomerExitStatusParamResponse1Body record {
    # The field reflects the description of, respective customer exit status
    @constraint:String {maxLength: 70}
    string exitStatusDescription?;
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    @constraint:String {maxLength: 8}
    string customerType?;
    # Indicates the extensions
    record {} extensions?;
    # Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status
    @constraint:String {maxLength: 35}
    string allowRemoveExitStatus?;
    # The field indicates the reason for exiting a relation with a prospect or customer
    CustomerExitStatusParamBodyAllowedExitReasons[] allowedExitReasons?;
};

public type CustomerContactsResponseBodyInner record {
    CustomerContactsResponseBodyInner_emailIds[] emailIds?;
    # The mobile SMS number of the customer
    CustomerContactsResponseBodyInner_smsNumbers[] smsNumbers?;
    # Indicates the extension data
    record {} extensions?;
    # The fax (facsimile) number of the customer
    CustomerContactsResponseBodyInner_faxIds[] faxIds?;
    # Identifier of the customer
    string customerId?;
    # The phone number of the customer or prospect
    CustomerContactsResponseBodyInner_phoneNumbers[] phoneNumbers?;
};

# Represents the Queries record for the operation: cancelCustomerGroupPurpose
public type CancelCustomerGroupPurposeQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: deleteCustomerPhoneAddress
public type DeleteCustomerPhoneAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomerConsents
public type GetCustomerConsentsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getCustomerConsents
public type GetCustomerConsentsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The identifier of a condition that is used to build a product
    string propertyClassId?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getCustomerLegalDocuments
public type GetCustomerLegalDocumentsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getCustomer
public type GetCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerStaticChangeResponse
public type CustomerStaticChangeResponse record {
    ScreenHeader header?;
    CustomerStaticChangeResponseBody body?;
};

public type CustomerKYCDetailsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Next date of KYC review defined manually by the User
    string kycNextReviewDate?;
    # Name of the person who introduced the Customer to the bank
    @constraint:String {maxLength: 35}
    string introducer?;
    # Date that first contact was made with the Customer
    string contactDate?;
    # Indicates the Customer Relationship details of the customer
    @constraint:String {maxLength: 35}
    string kycRelationship?;
    # The last date when Anti Money Laundering result is performed and updated
    string amlLastResultDate?;
    # Date system has calculated customer should next be reviewed
    string kycNextSystemReviewDate?;
    # Whether information related to the customer has been collected and verified
    boolean isKycComplete?;
    # Date customer KYC information was last reviewed
    string kycLastReviewDate?;
    # Describe the results of Anti Money Laundering
    @constraint:String {maxLength: 14}
    string amlResult?;
    # Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values
    @constraint:String {maxLength: 4}
    string amlCheck?;
};

# Represents the Queries record for the operation: getOverdueSettlements
public type GetOverdueSettlementsQueries record {
    # Contains the stock exchange details where a particular security is usually dealt
    string stockExchange?;
    # The identifier of the broker
    string brokerId?;
    # The nominal quantity
    string quantity?;
    # The identifier of the instrument
    string instrumentId?;
    # Customer's directions to a bank as to the disposition of funds and securities in the customer's account
    string deliveryInstruction?;
    # Standard date field which records trade date of the account
    string tradeDate?;
    # Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)
    string valueDate?;
    # Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc
    string transactionId?;
    # Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc
    string transactionType?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person
    string depository?;
    # Identifies the currency. E.g. USD, GBP etc
    string currency?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# JointCustomerDetailsResponse
public type JointCustomerDetailsResponse record {
    QueryHeader header?;
    JointCustomerDetailsResponseBody body?;
};

# Represents the Headers record for the operation: getCustomerGroupPurpose
public type GetCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateCustomerEmailAddress
public type UpdateCustomerEmailAddressHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type UnapprovedCustomerGroupPurposeResponseBodyInner_aggregateRelationships record {
    # Indicates the relations that must be considered for aggregating under a primary customer within the customer group. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedAggregateRelationship?;
};

# Represents the Headers record for the operation: cancelCustomerGroupPurpose
public type CancelCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type UnapprovedCustomerGroupPurposeResponseBodyInner_groupRelationships record {
    # Indicates the list of allowed group relations in a customer group using this purpose and group type. List of relations can be retrieved using /reference/relationships
    @constraint:String {maxLength: 3}
    string allowedGroupRelationship?;
};

# Represents the Queries record for the operation: createCustomer
public type CreateCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CustomerSweepsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Debit account details for sweep record
    CustomerSweepsResponseBodyInner_fromAccountDetails[] fromAccountDetails?;
    # Creditor unique account details
    CustomerSweepsResponseBodyInner_toAccountDetails[] toAccountDetails?;
    # This indicates the charge code which will be triggered for payment stop instruction. Applicable when financial institutions would like to charge for stop payment of cheque etc. 
    string chargeId?;
    # Retrieves the charge amount after redeem
    string chargeAmount?;
    # Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account
    string chargeAccountId?;
    # Identifier of the Retail account sweep
    @constraint:String {maxLength: 35}
    string sweepId?;
    # Sweep types defined to the user
    string sweepType?;
    # Specifies the frequency in which the payment application(periodic payments) execute the payment instruction
    string frequency?;
};

# Represents the Headers record for the operation: createCustomerClosure
public type CreateCustomerClosureHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerCreditCardsResponseBody CustomerCreditCardsResponseBodyInner[];

public type CustomerExitStatusResponseBodyInner record {
    # Identifies the type of customers. Example Personal, Business, Corporate, etc
    @constraint:String {maxLength: 35}
    string customerType?;
    # Indicates the extension data
    record {} extensions?;
    # The field reflects the customer exit reason of the customer or prospect
    @constraint:String {maxLength: 80}
    string exitReason?;
    # The field reflects the customer exit status of a customer or prospect
    @constraint:String {maxLength: 35}
    string exitStatus?;
    # The field reflects the customer exit date of the customer or prospect
    string exitDate?;
};

public type CustomerEmailAddressResponseBody CustomerEmailAddressResponseBodyInner[];

# Represents the Queries record for the operation: getCustomerDigitalChannels
public type GetCustomerDigitalChannelsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CustomerReportingStatusResponseBodyInner record {
    # Specifies the Fatca status or Account Classification of the client. 
    @constraint:String {maxLength: 2}
    string fatcaStatus?;
    # Identifies any restrictions for posting entries that are to be imposed on the Account
    string postingRestriction?;
    # Indicates the extension data
    record {} extensions?;
    # Holds the status of the customer as Reportable or Non-reportable
    CustomerReportingStatusResponseBodyInner_crsStatuses[] crsStatuses?;
    # Indicates the residences of the participating jurisdictions of the reporting customer
    CustomerReportingStatusResponseBodyInner_reportableJurisdictions[] reportableJurisdictions?;
    # Describe the results of Anti Money Laundering
    string amlResult?;
};

public type CustomerResponseBodyCustomerNames record {
    # Continuation/Extension to the Customer Name
    @constraint:String {maxLength: 70}
    string customerNameAdditional?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    @constraint:String {maxLength: 70}
    string customerName?;
};

public type DeliveryPreferenceResponseBody record {
    # Indicates the extensions
    record {} extensions?;
    DeliveryPreferenceBodyOtherMessagesDetail[] otherMessagesDetail?;
    # Identifies the default customer preferences for receiving any message group for which specific preferences have not been defined
    @constraint:String {maxLength: 35}
    string applyOtherMessages?;
    # Message group name that provides details of all Messages to be triggered
    DeliveryPreferenceBodyMessageGroup[] messageGroup?;
};

# Represents the Queries record for the operation: updateCustomerExitStatus
public type UpdateCustomerExitStatusQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: createCustomerGroupPurpose
public type CreateCustomerGroupPurposeHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# CustomerDigitalChannelsResponse
public type CustomerDigitalChannelsResponse record {
    QueryHeader header?;
    CustomerDigitalChannelsResponseBody body?;
};

public type UnapprovedCustomerGroupResponseBody UnapprovedCustomerGroupResponseBodyInner[];

# CustomerEmailAddressResponse
public type CustomerEmailAddressResponse record {
    QueryHeader header?;
    CustomerEmailAddressResponseBody body?;
};

# Represents the Headers record for the operation: getCustomerId
public type GetCustomerIdHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type CustomerAddressOutputResponseBody CustomerAddressOutputResponseBodyInner[];

# CustomerIdResponse
public type CustomerIdResponse record {
    QueryHeader header?;
    CustomerIdResponseBody body?;
};

# Represents the Queries record for the operation: getUnapprovedCustomerGroupPurpose
public type GetUnapprovedCustomerGroupPurposeQueries record {
    # Indicates whether group relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    string allowGroupRelationship?;
    # Indicates whether customers in a group are to be restricted from being defined in another customer group with same group purpose. YES - will restrict the customer from being defined in another group, NO/Blank - will allow customers to be defined in other groups
    string groupLevelUniqueCustomer?;
    # Indicates the type of customer group. Allowed values are RISK ,LIABILITY or Blank
    string groupPurpose?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Indicates whether customer relations have to be defaulted in customer group from party relationship. Allowed values are YES, NO or Blank
    string allowRelationship?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Identifier of customer group purpose
    string groupPurposeId?;
    # Indicates whether a customer is allowed to be part of multiple sub groups. Allowed values are UNIQUE, MULTIPLE, NONE or Blank
    string subGroupLevelUniqueCustomer?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# CustomerMandatesResponse
public type CustomerMandatesResponse record {
    ScreenHeader header?;
    CustomerMandatesResponseBody body?;
};

public type CustomerPhoneAddressResponseBodyInner_customerShortNames record {
    # Indicates the short name of Customer
    @constraint:String {maxLength: 50}
    string customerShortName?;
};
